%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 9.0
%%For: (JSK) (Univ. of Tokyo)
%%Title: (now_printing.eps)
%%CreationDate: 1/8/2003 3:14 PM
%%BoundingBox: 98 422 294 606
%%HiResBoundingBox: 98.5942 422.7446 293.1982 605.8203
%%DocumentProcessColors: Black
%%DocumentFonts: Times-Roman
%%DocumentSuppliedFonts: Times-Roman
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 296.5 419.5 296.5 419.5
%AI3_TileBox: 17 12 577 828
%AI3_DocumentPreview: Header
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -15.5 851.5 1 669 904 26 0 1 130 136 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:17 12
%%AI3_PaperRect:-17 830 578 -12
%%AI3_Margin:17 -12 -17 12
%AI7_GridSettings: 36 8 36 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
%%BeginFont: Times-Roman
%!PS-AdobeFont-1.0: Times-Roman 002.000%%CreationDate: Thu May  1 14:12:30 1997%%VMusage: 34396 41288%% The digitally encoded machine readable software for producing the %% Typefaces licensed to you is copyrighted (c) 1985, 1987, 1989, 1990, 1993, %% 1997 Adobe Systems. All Rights Reserved. This software is the property of %% Adobe Systems Incorporated and its licensors, and may not be reproduced, %% used,  displayed, modified, disclosed or transferred without the express  %% written approval of Adobe.  The digitally encoded machine readable %% outline data for producing the Typefaces licensed to you is copyrighted (c) %% 1981, 1997 Linotype-Hell AG and/or its subsidiaries. All Rights Reserved. %% This data is the property of Linotype-Hell AG and/or its subsidiaries and %% may not be reproduced, used, displayed, modified, disclosed or  transferred %% without the express written approval of Linotype-Hell AG  and/or its %% subsidiaries. %% Times is a trademark of Linotype-Hell AG and/or its subsidiaries.11 dict begin/FontInfo 10 dict dup begin/version (002.000) readonly def/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.) readonly def/Copyright ( The digitally encoded machine readable software for producing the Typefaces licensed to you is copyrighted (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems. All Rights Reserved. This software is the property of Adobe Systems Incorporated and its licensors, and may not be reproduced, used,  displayed, modified, disclosed or transferred without the express  written approval of Adobe.  The digitally encoded machine readable outline data for producing the Typefaces licensed to you is copyrighted (c) 1981, 1997 Linotype-Hell AG and/or its subsidiaries. All Rights Reserved. This data is the property of Linotype-Hell AG and/or its subsidiaries and may not be reproduced, used, displayed, modified, disclosed or  transferred without the express written approval of Linotype-Hell AG  and/or its subsidiaries. ) readonly def/FullName (Times Roman) readonly def/FamilyName (Times) readonly def/Weight (Roman) readonly def/isFixedPitch false def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 defend readonly def/FontName /Times-Roman def/Encoding StandardEncoding def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0]  def/UniqueID 43146 def/FontBBox{-168 -218 1000 898}readonly defcurrentdict endcurrentfile eexec8b6e5d94c2011e84337eb6aa8c9f94ed23d9d874b2b6213329d8b14e7506c2c44191fca634722de2d7517eddbf38a72143aa3731f22db880be1deb8d8c4b788fb50b26512e484404a443792a51c31c744b2a234a2aa147e9d791b3080b004f961e6185a1d88823c51ef3cb1e5efc14bc413a0f87a484401ff1de26e0403ac6
37344e27825bf4af2b87d2079b205dcfb9dd5680b99a6b61c23e0943a125e3632f9a00896bdc7a98f7f169d89285729f7d82d4a1f29fad99041e4006d38f751ce00edb3946679c1c711f48306844ddf9e9a0049ed4cbadb963431460a08d17c56023cf2ccc0f19b5f0a4e8b4c1076e2e38c1cabc4c1a64ceffb58911150496
ca0fedc198b4b246e906a4d8a32e9bee86fe13a45f87813bd0e28220e748a3434b1699075c22672c96bc3909749ada187a6d70bc7db0a3f6e286d294c36dca6c972bcd834279e00a817688c7c826b1f0c9e67d1a708cc961db80429bf808c8c5755fab77fd72456673add4f06ff0356d64b44eaf6b1d1f53a55118bccb860e
d691ee133e41b3d8620ddf538a456a15fdacfa26423d8410eab40db248e580692435326b7e51f3ef62941476e7bb9be7d62764dae451bfad149740455b0c9a83ff129cf43d24c906e3e3de2f4ea6966d4c165eb46f5bff5113d2ef432df7b71ef2d416c030dfc801269f042390cd4568438f40e62c1d845166b5fd506d5ea3
23f2f0b88e81aec0f045eebba9b08c55153ba8317e3f906af6e30477e65d31b1fa4eb02425708a3253ee3c44de59b148088ab01b56f1e78f20c973337224ab47c3a1409dbac1cd9fe86618402446dbecada680c6b8b06d0a0757e96ecabfa1a246cc100afb1f6a7bf50cb75182f4e1e8a42366ec20d96c8dc4c606e94dc256
327863e391308172788c246b3ea46dc6ad06b7ff4593d784fef45b3af9d25040afe37b2c7d0b9e09c3e14ec36f7fede7657e0bfa14f0e8c03d4c7ed3e6ca563f3f61013e35c4e28f75af4e7f4fdd5651b6b7444ef9d48670adb33e0d5e1e5932a6ac1a2ce084b9d5b4cfb5cdeff0eb5fefc11785433c648b1e094b9aa42f5d
a985a5b3bb4a4f6913b6f512d3c01aa5cce9804e93eedbd7a482e9ad464510604346359a9ed018f1b94aa3054ed5586e5898a8ac3511438b054e8730399025312e896f1c57f209b4a72142058ca733ce8a15991ccea2570bcea49341f85e129859777874522bd15fb903607167c4a8a6e5a289693f6a4116e3fd40b408fceb
20da6fbff510b167e05d6982cd70333db348166882a462676732abc03561cd9ed17e9b98209dd60ec5fc536eb627fd54eae0fb68f94ced5f0705c1c1a0a0aa32a13cfe4b307b23ab28e613031393f45e26fadae22fd9b86e7e78095d996ed416ae66126e3c9c524708da601d698a05cebdb11fc6c7c53cbbd2ac6a5256a46b
87152baa34b1a56126099895a726af3e8042997e5bd744cbfe5736609cfc01a10f94cf1e4e12018267e397f4f6b17c49d6c03061b18152643da4113ab278e3c18a982d66e18f6a5b238afe31d36112388e95bb51d13d860b526e904297ad15479ca4760456247b7777bab6dda1cf0aa1a00b1fcca7e7f8f47b859ac82450ce
d1fe2077cffb51bb55a87a58a28d522ecb0e568f590fdb5b9735892bf4df7f9e9b8130aa6833160cac310d61f570c56dae491962e47ff03f2aa9f786ad8e591d4a336601388eb0e389b3387e6f8ebf98755417a2c55e5e7e3cfa2aa919b056a5452840229ba9a48ae2cf25058d7f8f0d629ba993ea4e7428c3a6736d815847
2883163e4a1f5bf1b85c76c4202c6adfa805e59fcbc3283245314ac5c4b6cd00389398c498e88cc5302ee7f139545a95e82109b09294b288a1d7b16d95a38aa67bc10fab40036b45345f83b26b3883938bb1554fd4b83370deeaf472b9210211df517c7c8ad94bb6b08cdc6e61a47c83e3ecaec0f8f9eb3fc5cb9e9ce1f27a
10b32ce40d3582f874da96ea255ab5069bf76fae1b96fa61b3d9657d7ccfd8957faf34d54dada65c98e1b15e2293c19fe2be44bd9cacc73c1d931ac3605993f987d4624bca6bea2d7a32b1a03f25742e8e70d780b1803bd635c05d6fa8b8313796e03138ad7a11459788ae61d65ea35e4b3a1f9f5f74f29bc06418fb075999
7f3fd1b6b2b2864400641da467222a577e02cb2295cf26a4670ed407ea51d45c42903143bf9a8aa957927a3889502ce723d3240e0215d572396101d128f62fd59e6f0bce41c8d3e3a9488ce78957c95f4d0e71983584d376263e9f2d9907852535021e68556b37786cfe74a438ef8d1c94c467c6e5e894f65ea4f3201b3bfe
8d46abebfca05bcefdb10abb56a457524e63389fcfc3573d31f82a184ab10b9158617b4faa88b226eb73495c57c1135c4c6e0cf05ebbac2957ac4eeae43f5830fc7c49788eff84bd341b44c6036443c0f0b42409183cfe707c35316fb5446a9665cd685f3de8131e487f27ca0fd7d432b4f3cdb60e86496f2148e6dd041629
643be95d94608dea634421282d35dc462823c2dbe6604ad383a33cb16d63fcf8652b01d5a9f66c4f8316d82eeae445088691e78b140594fe2ef668c8f1d728df71b3cf8dfc09362f20f481b7ee242b732b6e7170ef2c8f4cfe817e6487a7ecd8163499e4ec03d64aca6f2440d852f7e81ef4e34bffd1866d2f593661543b01
0490aca7faba07ea6c5bbcf9471a523113741924a2dbc01e532ad8e096f92ed755e832fc43b01ec97cedd1c65a3d514b3ab867dd2af664e232f71ba1d6addd3007bf1f3a295f3e4496bf3168664b4a9a9beb481bc22249171ebe0c0d0fee3150c1b765909c26cfe5f7f9dedd098fa17b0c6361484ebe7e5d04fd33d7d88d14
0ba74745fafa4f4d1c4a4764894a95b9e70a55e3ab079ec81e6dec4c895a600601469981b366527ef45101a0e08f2705b593c18c2eb17a2a6f7bde4c3f9c7ca32458fbe91fcdd8ba062864241df9d30b0839d52fef5784e5c70012aa55884294392cdd8292157ecac0285ba353731e5284932e7bdc3a4089cce4c51474374c
0363290e445a5f4d07370671c52ceff30da5ee90e0b7f91333381309175f871862c62eec134b840b3934fbabec9438aa660a0020d9d61c3f8f4777479529a91d44c000776512a13d59f616fa92145c9ab25829f64826cbd2c1c9df4fc3710322b176918a5719de710c3b34cfca94f514ccf1cdbd19367985b64ddc9a3b24e4
e4ce062310b11d3504f80cedbe21e808ac03d821dea7e21704870921c25d70a32efafd1ded9d5e47d34bb7fc0dbe639d1b4d5aeee95904cf96a4fb66230af0e6ea9fc474b68269e342a0de224cb1128897f1915866dc2924d152a595c015fd3c17a1d10d90e30f6f0de597e3eb69705bcd203eba3b15a21225aaae1ec0ed91
41d0c083f6263f01e50f998ac9db25a29c3ef629036c128db42e8fbef05da8ab71dd64f123a022a25c01d56a6aeaf78a8bc37846507ac63785577a4fc86ac61a35e92f27be828ca0967703105b81804bb61de47bec328ec876c0f61a42f2d3ad09daacd30a86aa94b0eb9e08d32c2279b02cfa66ad0cab7e096d6939fabfe4
c211e9cdcc32300d13ed771bde14aca25b45f59c07f2dbf0dab7adf2b4eeb68fc72cb1f2eacf3aaa48a01f1aa5a37a8be37dfd51557cd0e215bd193e5408d1d6fa758bf53c3002cfdf7dddaaec7dff1e7558c5dff3f0f69ff5805f906a891cc98a2dd02b0e413310df6cc5e484614a04d84d2d22d234db4a75270c9d72af9b
fbfea809c350da1c52a712e50066d7b01f8d91e72fcc11a6eb1a8d1c7518be1f14db5264f5ee467fdfb65ef23249864c6d058570f598baf56b4dacc6d95dd780617c8b01263fb77d0f3f584f2a951499236d5b918e62a75c9f39ae8218e15fa680b8482dd9fad133482eaf416b8f7df3b9b1a80e40affb2ea996380f041111
5ed8a7144d5a9d1496735b9796bbd58f3bd3c389fbf8c55218ba39ab230ef41522a66b06a77966f6f8d66644737a7331a6eea7fee4760a9656e04736dce923f1084822c7724966b652594fb974f252592dfea5984eaf9d2ed63456c30e3c764042aa6c465e07e8752df296f0bcadbef2b23764f09f71eaf84cd2a9f263f42c
e46796f5ffb4e64a8d0b284b8c7698d640e53b3acea48b5d4c2f5784fb40b0f80fdbf1e1009aaa0d87c57d583a0e4944da9001cea265a439401d399532919b4a04cd2466d63be0c421d801edaba0b6e6fd21001bae441a650405072bc4458a9230a2d107e4e0848f593da58b6d2c63803948716bee930ed0cba45506cc27b0
35548d33d0bf261dc5d9ec4a41e0796e90b2ced0cfaf0277ec7fae1a578df1df3413de35bb7f7a947b9726cf100416e69e1a7d39d18ae319dc0510dd397e9445db9c90b428095a92fa3c3ba89475c66cae4fdc2fa6c062d97fa80c4637ac2f6670ad266a3fc3c97599f261955e41ee578c7c8a84d4b059e5717c2988117777
5f60b6a1d7d7470c544dabffd1b9eeb862de12fc7b59c545d2265e681b1c08245a6315c0f71f08ff470a62e38c1c48cea64551f4a713759e12e3e7594fbf39a109a2a4074a957dd9d881e50d8ee0967747ba59e620e823b9fff1ffbee0405a48835399c1185f8130789e58198535ea50d7e1dcf6b595f720b0e512f7fa74fb
f5dad99292a8a1f2db41c31fc2aba83c9942d196421812d85b65b8b022b89d470e23d202e128d809ff461106d389907cd321422f9f6dea1ed6895c672ce04789768ea62f0258ee777a6f4d1fad0b6da98b37e8d41e9769b2b334485011b906aa6300b832f8983aa3a9e9a973ecb4ad04c73de8488ac778bc2ab4ff83a81bf4
0e75da8e4240dc73e0fab00f0a38dbb556f17f9edcb8ac875ca4344545c3ab5138e4f025a6152dc6a3a53ace379bbd477d5bd8968298215d274e08463252df90c3f0d3f11db75be5987449f5e68c72985d92d6f0bb2eed6ba80399987579c6229d2f7a75543c2c61d5149bc16a7b4f3ed20dac8b8edde9a68fae1f847ce58e
27020b53d90bfe02d46d39ecfd41fa211a5e52b5b63d48d4314f5191718b4921e24aef5b75a21d34d59b91291e23850054963a85d4f8227776c572658d8ebe84ff478011f212939d3bd5cc1b699eb9210b8b79ddaf7f3199ddcbc41b77dae3def14f087a808487a911c404c56205197cfb8f1d78cd2a4f946848acfb10d38d
0cfa2bd4579446946f9ca77534dc4b5d6876783894f4692d8ef40b50a4bc2a65ef6959b66390bd1020bbcb796ae45365a189f46382b17b390a099993b5674e0178a8a1c31b8c756b56aaf9e762aac8d838333995552578af64a04f8a95f16532074adc613d1d8f7f3fa75a80c188b49ee8e97229c071a422a0ac0a96b27229
6b9fb2319f124b024e9637aa69950eb61ba110e606ad12fb95149c3ee8dfe857992e82f3c6189c2a2af5f53a98f99a42ff957f1e8050a4870211a45e58a9ef6d192c2a29f33edb464447d3bd17e0073abb20ba63666244adac251e1ef9d17f0aa5635796d002c7e5d488e64bdfae35cd55e319e3e8596f27b9d4e688395302
7f74dc52a17783019f736b0bed4c6736669db4d1c6bcb6dd8c8f179a9baf9dae7bac4a0e6ff129915aea5d92233a7e04b33b7d287a004a4a01f4224d0355b8e13d68a0888a95162e7f4567f9fae185b9fcafbc3813596fb45f42217ae4d655dc44bf86062ccf4b8eaa4ef1de59f9f96f2828494d3243b20a48b809a3f2d599
6cb5b843778967a24e0d0c340441123a8b264a480b9ee086f4090f835168bf1ddf7ca0d74eb2eb80da5c40964364aa7030f7e774cbc8c89ff47f4f6a463f022433c3f904abf9427839952024904eaff6297a35d3225f5c4e4b7217d38c76f5bba9d955d4daba249dd4b196278c41d1f836f53bd59790de3838f8aa7e1d3ad2
e209530e83dcb623d90583eb336094bf0b69cd7db2c5a341d76525ef619b7500e50e71fae0063ac3029adddaee263efed9645234f1e295777759ea2675890fb4e76c179b8fd319cddcbc863c10efcb6f9401f0238974b92580179f8596380ba2beeb9d275b4702a6e37edd56a29a6e6f161c8ec123a301902291b39fc99139
334ff3e414084edbca08494f0c2225db390b1353a9da5e13ba5846392e1e9d9e5efa9c3a07f188b653fd081ed533aab6d8d47da4df2ec6bdf2668d3430af897963238ba79030e3f6066693ce4864c7fa0aeba5d6cfd668f85f0789862a57a4b3b955f5ac975d1d1664b490e53a8b5331069a4f205052052dfce425f6862003
aec10939324a248801fa6bfc0fb189cc56ebd412a08d415b7b9d1638fa8572531e23d117144ce5941a7074d57240d6f16668daeac6bab23193be5f30d78c91b63c395e3b23e4c2b90003b6deb45fc74f9b1d5f7e45b38b7b7c81ed7b8e2663c7fc91fd37302c30ee578d8ef9129818d54c300861155e0e21fc46225bb9fcea
cf22f5c2431deec9c386e85db0193d971ad9aa3bc18fed84834e4c385cb2ac4197fe4197e0dc4786be287ad3cb6c0cc1ddea729374b6b6fc8d9a189899acf0c86b11fae8fbfa26fb07969f47536b28f30e03c14593fb1046fc6b1cac02a7939f0f42b993c1c1937a944e498192e7a9fc792fa3590e777b0258b248045a055b
9602b87605722de489539a5bdefa2b3ce33623c75de6d6192085e46b41ec4328e662b397beae8d2bea41787ad52a771e946e0160e648f0bc94d3384a13310f8d17b4024428b4c984f434178b97e58b4f0e073865fa84b65a67dbae5c2ae0a648b4bf547867b5718c6aad636842643ad0c60be734ecef35d588b306950873da
9a5e37eba2e9ad70d0dc8b25b83b08c7700e3b3697b619801aa775b1de78306bc193f6d87a3a02d9ddfd6943bdd98afe2ff1b3eb0b8580350fc7c544412f5570ca29a9f8dab06352794a588564d45950a8b9e2f88706911d5d83da3dcf781c3bfb3fcd0e9278ad0673fe229e7500d807e5deae55b6dc6a47a77c35c4350305
7b229ae1711eac252f6869c481609a9f6f0a57796e1d339920ef87851f1cfbdb107b1417f511407c39b6c011c5a830e17a51ed76c7ea52d8a42920f351434959e8f9f2940b5c12e18e82732cfaf8ef8684418398a374bc406b0b677c7d0ea83d3a58e215d75e59fef61f9ccee1b388130cf1561fa68791701050a1db98beff
8ae339080508cb05da8385f6ac0a94cb052ca4777194e2ddd868ac5c612529c9b9a1cb52cafc013e02c886fddd00c2cc767063e79fff4d085b014d1d107e55cc2ac8d3e10656d67bd5f0189d454e76d267eb9b9472d9cf1b40c72b20efbdb899c945b98db7465550cc61a375cb7c3428a0251fd0c43782c84823b637dd985e
e092cf1d5ee9e99d4b0495057f1aecf25bfec13f1908bc9028732df4d420a770080cc2e4fab23eb44499418affe2d1bff17e8f23da154a62ef6538434cf37f152a8c9d31a9cb5904a2d37200e0f43ac06cd678c8d1662a87b366b1209916045d30693284b025bbb49637af77c7f8ce39bf34ccc307759a91177f12fb39bfcf
bdc40849a56ffdcfe5bf4f19edc34b5e6bb15220b26b2ffee9bd87a199a3f393adcbff0f075696bf230306807eb1b3d4ca22870c3c80b8e63cc107fbdc78bd06441262afb9b0b17d5d27f92578dabb7ab4549b05d7903913cc942efec4da7ff63e4008e87af14669e6ed6957b4e5376ce841e9b2a26f522aaa2519bc00184e
a58cfc137aac44cf3c72c12d2799478f95a168e4bb14b044dc0c6d7eeccf5c367d5dc1861fefa3656eedd7819d76906e068c3fb7ceccace17fa9d7c7394918abe6d591cdbe80b27c837393184618f0b5a8eecf7ef22863574d6f81e5ff1232b0111f6ac5794a9bb35e2109833ed023bcb3363783befa14bccddcb68cc6742b
fbc0c7f89f6432bfba99ebf4dee541b188892c45681310f210279a0bbcde2d21e2c2bed0270dc44e76b80c51fdcd3c561732de1d894524d820b9734df44d8c4169491b5ccd5c7c60c5f07c005ee56d7a295da0b17b26bd300439c32c7fb0ad54d56ffc93906d4eab6435ce35649d9d365f8df16e8c6fe38ffd3d95c5f67f7f
85e61aeb6c0961593797a3ca73e93614e814d5c339910a1800132849b2815d9df2d9fc6850501d5a657f699667b51995a01f826cb61bc687e56e8aa5491bc1a47dff1d35eb09c1e824c159b4039852d635506d3978d00ff5a1c86f2a2d34a0e4c5cc499204980feccb572a2f6bd45efbf2dcb27ab8fe3e73451c9675bbbca8
dd404f5ba7a5519a96c87394e5a3f459b4de4d7b7a32f65cfee164b15c6d3f87a0ce959cf34d555c332e329f458c31335aeea0aec03ee3e4a36a732f88a3435d9554c128419d22f75636cc18a0e1e75f409b0f0263f8b0d908a2a13c6930f04817ccfb34f6b0c5770a62e9b4bf8cca17d4cb7d6da5c257ec4f1af741e0413e
0626e36615e5e9dc4a403861290578e6b8741330e089adf7daa842a6fef7713147d539f6bc2309921a0693240e74aae245690567b6a731a371a521f9d8e2569549979509a802a77c1b07c8bbe733239320af31a279f5e0120718a9adb97a2e35bf23f45889dbce7545dd482eb1d58bbbf8eab3ec16ef185f3d60d8c555bbc4
41d6575aced0b6287660e010a145fb5afc93c9ddf758ae314808a0c4ac9593448bd8857d176f4af8ddd0b7621098df2d7bec8f2e0534d163bf033dc1c47abc36a6ab37085fb8e78a6d497c315f287f2d5336098ea0b816f5bf906ed76dbcb408361c38ea2d1080ba9fd8c64844f8f55365964fdf736a4631eac3bbd518e584
d214be6f7d516841452b82e62a6236c576b32585db6d76c5056e7ad9d23986a7a231890a74c6308b6fcf8060db513dc718edf560005d56fca54915a6c4005c258b450e26b2580f18f550e63785690754ab6eb467ba258ee0c07c19c72ce5f339e8de7fef447f1270f2697807c71bef351137d80d691fa17eb67dd53d19335d
3e6c573d2ed59db2883387c755bb91bbd6105f7d094b2b5068cc2033823a79f42249acb3b2fef7b41fbc6496857d934a8a7064dd3dfa0097c4987d4f4f9b7425d3400bfd4bc8b035a9934df294c575c6783c7460ca037f691b182e15f75b08a1ec7e92105d8b067d9cfb3d9ed50b9676f568b5481ca52f0aea1a5faded37c6
61605546465d1d51cc3d41334c3ef1ebd4b62e354bc17996a2bacdd77404cdbb9eb6b452a66d313e3239cadec2a53c79505b7e7467970baa12634445e136886f577f30257e86416084654c1c93526df20984b44bb117690f60d3cada1c9e83867c1fcc04d6713065b35ac87278dba7d7753f53663af21e15a455bc1900fa6a
80348429bb9d163335f93b3b570cd0f86a5492c95b33034a31ecdd6cf5bd12bc99a831adb3e1543c1c5caf6dec4ed42f8ccf33e380331ba4abc516125d89c22c3d2af2ac9432c4128164aaa3963a767f0194a4249552ff9a88ace76d0ff1b68540762df99abace1538f4257a4ef5c0a88b3eac5221881d0ebc56994a3887f2
2d5f369298f7976063ca73ad629e3b05c0dcc6bc9be55aff68df0865b18b12a671dc4eaf62dacb339408b33886122815e46f6b16995185ddb0d72512a2064f509b634a40d2e89522e1f2ee44919f6eb1b9f3b07cdffa3f6fd146106bd601162e464e53dd5777e8cadbd1a007432d0e5f16c9273945953c47f2a494496d8b9c
881b79b71ba22aeb37b0f95584d6fefd88b77efb84f698b347cf78a8f186ea6f8673c3bdcaf6c40abc9acf0d3fbd0041e12bcbddb8e876477b307da402463be5f26bc6e3b8988e0565d87f32cd5ea975428f6c7b9afd1536dcae9b5bb91c330dcc3f47b008cec7c501cf19fd834ae4c22d758050d90abccdbcc5a84c46f2c7
b6d784b0141ff7fa8744f6a31ea28553b3e91161a82283227f68d9ae415b439e0cd8da5a375f93d53ed93c941e81c9bce17063642de6862c5d4526c268fc3cc1668ab882fb204cc39af9c3e089b07b4d95a04909e60ddc83cca56839334f36c4f256fc8d598477a403904ca67f1214ab2e650c8231759e469dab34bbc920bc
d7e445492583d09882cf4ce6147ff7ee90c557229aa7ba2a6cdd62a08a0d3c5f3ce287caa49996e5493f93fe87ac239ccee936dc42d3eda25d3d62a3be555a81ae144e38d96e79b55e82690e7cd815ef82388806b87f73a65b73b73a41919072dfb63ab0d1af55c664add7a4b3e5f7ad37bbf754e2711efebe674aa6cc4d24
d928017af155b5b17ce90dd148a1da5062e4ca75145ba561ccbe6b023bb4068ca1edc755e37f1966149ddaf128fe4d4cf1589eb8d1cc6ce06d7b3716084ab2cd2d6ffbe709003f237095a3289150a80c5340c2af5a22a690af7095160d61d06a6aca1248ecd70b81793e9d328a9f05e276811f7b64527d13eab4a36ada5fe2
a0da2ae013208b63af2a8bfec3250d8f64adf8cfccd57be450595b9741a4c7bbbe597f1898ce680de3ef935ecb267fb1e06eb0c2f53d836990ce3ff7fe9a185221de666d6dc14cc8a9e0b3d05a6e5eefa7db55a97b227650917885ddfe59fb4e1d5d000c79cd5a22990c9f71a74a6118312f542d1b7a81e8de57038ef7781b
8d6ab77913653cf641ec316c58986f6e26367ec3adbc7775c739a95ab4fe9834be74c368dbcb309cfdaadff828e4ef8bca957857bbf826cbeda5f1b24612b3ccb70993ed975ed1eeda45f7ca69bbee232fea8218408b0b974a0cdd161bedbebca93a708c1f9c2bb1b71f2b545b9810e96e6fc396d6d35d8b31d1a1671e8fd4
860e31eb5605fbf0a915c267a3ee89c90a784620285e36593a0f8aaafcaa3f87ccc03dddee4fe8ed4fe6ed520f9db624d285e937cdcc410ed875007e766e57d299658c81dea3645a17a41124595dbfb97377a876dd9f60b98823601208caf59ed31330b09d4d932a8dee24b26919701a7d951261057cb0853a4bd804f05468
8a29306100f8ebcc51ea4accadf5182e78bc28de52e8ea2b87dcb456fa41287fa4dd76a4d4f8954ec193b2987c9634d586515f8530d6e079b27087de9cee5903c7152431510abf7e0fbe8ccb73643e158182c99bb1048f00770fb32bcb63164778624a48e5b410164f7df718e0efad97ccf51c8adb5437e312bbb60d4c8055
0301b579abcb68aa6d9a48a7ec7c499446b670ad2780de49158899cb80bbf6a4d82420bf4b3838e8b31e85af12c7c82ee1fe5cd110e53494ada20291f01cce99dafb8fd155eec95579dfe59ab7a529da186885a6a04ee2d8959ddcb3e86cd502cd10e75c381c5d79f922049c65508a94e8b6382a77c49cdf6f54b54365ac78
56dc65425fc6da4594c3d9aa984ff108d486a7e7956d39a925b1655fc0fc4cbe11a243d829222efb0e5b8aa81aad939ca7409a25deb36653712bd7b6396304080ec6a535ee0f2ed7c0830b830be3e0b2b7c66b6f08aac322d6501ff371825b541f33fa6d055226af0b5f96dbcdb4c2037820e8f76a1d234eade63ee531b00a
2efa2c53d6a52c52d99bbf3aa9d3cc1f4dfd0b3683de9e52f477f0e8f0402fa6690dad515dd0efd94ba93435353368d816a635c12f7e717e6be0855ed7f1d31e41197bc61b3b3aa677e30525a4c86135d0ecc053395c736c8ca829531e4845b0bbe03c2617adaca32abd34a99c43d16849f34cc4757da22e806d474f871bc1
7edce5c8e2cb22102bc016b1c259922fdceccb89bbbbf0d3a7764fa347a196853f0668ffece4f6d347b263664e29bfe2282abc5ac6061d372d2f4e3858d779a185e9b42f165419f733d2afab8039147473a7199a7447bd1d02c8ec2578e59619cd7e6f6b64232f79302794126270171cac58b04cd9038851278cadaedd95a5
a8cb1c358d5b8767aceadd9f2c44b4b2e8dcb68852f86a2016a07b405ee88d024855aaf3ac276d636eb0dc86933cdc00919122cd129f11eb91cd5cb09cc92a26566e53a7514260782d97d54dedd9234fecb50d1d61b24f403d54cc2e7c1611fc07a54cea015bb93c4a8e527cac2566a9b01d9ac480139fe5145b3b6a920fc8
3d7f8ebe1507270ec69f520df52289bf3c8d9211e5b2ff2196299f7bbc7ecefbfb55a8053383c928acd9503fdf8a97301fb6057905843c3204e8a352301aece4935e9a0869b468ebd29c9ed0293d38e61acb1d6ad0681140bf66a5f21ded3a82e0112230ab4c18cc6bb55cbf12ff3acc84f0e493f26c8b12c16413e7ae7b52
111cdb68c33b7394004b9f4332ec445ef3a92cdaddac7f9227453695877c5a01ffa23eb349f2a5d6b53c15a852fa6c0bff45784161c54d63a409d01f64c9cc604de37a967a73fdc6d3e9d14d54a6fef67592b4af59c962abf4b679d1cbb7688381add5a98cdd85eb8eaac520f21bd31c10e7e2c393cee62bac734381678402
4cba2115af58ce22e8ea451bdb11c4083cfcdd01beb2dada55cc3819d6a2b5afbbe9fcca4dc7aa32b04bb1460c6ce245bf560b0674a15fd0fb8b461361d727defc72d04c39327f365d50fddf4b126ddf5c5c3a7f9b2219783fcb04eaae5a65b22e682b21e0d0bd244de3658e95087f63bc28d6de5e91c96d69dfa649e5de28
b541ba31d9c08c764e6e1c6218c453aff3bd5e611fcb0003ec89e4dd62c743b517cd345d345fd56f8d3d3cc810e1480b68288069901e62690d323f53f96259ca74b83c00284f0663cf532bdfe3b669c4db74f54efc4ec930fdd6bcac387b6bb25e02e86205b784789b4f59e98198d8529212cd41e53aa917e2e4443d344b4b
ce793877af6a53c34d2e4e06d6d1a1743ede529bf4d7d937e72dd8e0af681b1f8590f09c772bc1c71eaf5df05b40c4f3a2d4231299647948ace940c12fb74ccda6095d5c118927283c10398931f9f1190487be7bb826a02757bb50a043c4c670514859108ef4232905b4f301fc1f00a0fd87c85c1dc5fd21ca95282c337dbd
6b7837e41d6111521f64803d0839260cbef8c0d8e9591ef05eb8a576fae5e174fb1c9dbca64b973007f3ef501682a7585d85231b0e94bcb4b628e582811f83f2adf6a40da6e47d339ff37d7e92e27d26890c18f50703bb455ffdc3758076df9d9a07e98959234e75049806aeaccd806b24c84062e2505aa7b354a4f254bdad
1bdf4eaa9914c9246fa391767b4da7688af304963c6da7e5b8e3e46dd491a78b405336dc04a74fc6c6e30b530a3c893b6358e79e92f4248c267c039966fb8b6ea38feb1321ccb985bdf0ad0cadf8302bd3aaf3b61ace64a0cf36020d9a8babb242bc60c2067852467d3c91823b03dc66a060bfee7777b73bd2d0ec4e9da499
9b90a75f6672c451d9c4c877b59f30e893bfa2b53dfe2dc16e069c1f5ab2748cb42623066ec0f887bfc79475067cd274f539e70754868d0f39d3782e28778ee4db0d23ddc3d2fce037952ad69af732d2e7caaa020266885d24f85f4aac94b7d2a46eb4a71c728ccf1a84f179c4dc0d0ea7e36bc8ac337c6a16fd2cdcd09620
7771b9a9d891090c707edb96f008f6947dc026623c21e246128023d18bfa4e1bc07007fb313af91a0896039b83427780acbc8e9c784d40afdc718c50694a27980904b6f4691b2ad7db3b5f814af379cc9ea7cbae766db5f0cb2b3a75598599a3e8ac915873eb75720bdb4e0d8bc2c46706bb910946a82ed13a442116faa00b
9432f77cd92b5e5d6b2d80dec1d2fedc4780f3862b90068f67a60270f0ef0f27621541d7f2e523323d0b916ddb41b2dc88803bfd8adaed74d4b3421a4970763d9d8324b64bf7185e8a4511f6f2008ce38cdb7df4ad096430a978b51db2701321f8df42863151b3c319a494324c8d7f9f4c046b44f249dafd8ce823285cfc0a
6c97f8ed78de004430b3ba8f847d498fc5d251f9e506f45c615f5d03be7218213fe30ec04dc01831a3017296a4cf88033eb77b26a64dd5d3320a0e27ceea80e0f1b2e7a5f9aa274505534c07bfe6600105bd080d5be5609841f9cdf8c59e4f39f436c6727dd858afd0906d6a843e82c45cc647ffacc11c76ed99329cce490e
edb1f70134bcfe9a6dac6c387585fd6eeb311f9c71d07f53e4de245b1aeb6a9da74478b2a7faf8a092596a882bf4d6570dee0ffd9364372959028c19064a6e9aa647c40c4642e2a8c16afc88e7bf719eff499ccc5b03c5d13769468f13ba91a5c40988f4b0ee2cbe3db967d421cc107832894e2f4b7c1eead35248bfb2ec5e
1536a873ee3837cee7d6ca3a82b646c5513ee821453b29b02b185d5027a572ececc031c3691ac2ca35a70c90f32d73c5a2a27c02821704e215fdfdade4cba28b970adb4f06af1edabf0da8f849daa071093b38043b47afd733d19cb6ed201aa87ba0e53ec729bd189129b7b943becfa9804e2a5af404dd212b323a42c6428b
2d6dae2c3c64a0ab05585c2ed7ed7bfa86f197c2339657cbe29085d3f4ea21e65c23670a1d961f0718ea4a64fe72c6798b080e05316a53724d0a98456beb72e8164ddb40a9a3cc4edd9fe3db625b0ee883e6bb196bedad6630d199b3c4207abece6a663dee8121254d87d6214c1f0debcea435f5277a965623c3e6ed560786
b01afdab96d9ecdddac28361c7f0629f6be2d703a531addaa4018c2bc166f0c6af5a22a690af70957fd3565a04d2787e069f0d83ec44a1a8092ca78b984add83621edcb9f5762f44b7c884d07e7e6c2066ea4148046d8d0b510ed9e6fba194be43cccaf2c77f97582c3566103ef5aff55095f172b407d7bdcaba01ba6f9225
a3be8c750b5f4aacd1a6b53036c7fa255902ad445635281a66c78bb98eed926232989aa5b28f1e71762500f52ca27f9644819e63575506a52e77f485fe110e6cf5892ef8c33557c6c9fecb1a665e7b4255590a8290e47f8ada7bc49f3be2b2abd660d2b601d6cb24a4f4c74d38aa998786d09b86f74b6bc363d1800e2b26b3
f75d9d1eef7335864596ae32b8d3c8c5d4d07248100a6915d65a7163563389c4c702b4a2e94dbb2509536559be09fb65f35708d4232c678388fdab68bb53a1133bd49e5630d8434fb0b8aa1b0b2f208a8f174bd40ff0b3f560c539191567425f8d39016f34e4cf93418e52c9ffb850cb7af8b1065299c74305fc3974e19dee
2cb32127465878661662ffa959f46c1d0f947da2b87ba943c673e698a81ae080b9dfc63f9fe617ac4ab7d8c3954a895b7aa43d13c32c7ae9e4ec8f1d907f7e740cfcb0b92a47ca4d328481d180c88e74f0453678357bacc3d3245e20315f1aad8a236dc8a3b844967026584d59b8e3c0ee8fcc26a7d04e713e885038c2f7a8
6a51787e69fe6fc09bb5de28c7b7742f6d468aa062f983f15485be50fe797605db2f97d02ae5e9bd1f78bd8fcde21e0dfee86e0ea8b9aecdeed6595e223865fe3ec48518f9b77bdaf8d7489c07010a4c6892d3fe77eaffdc908167b71d6148be0e27e8fa075282a3f82bb39b295ceaf25e9cb61ad7ec7bb6334c7b9422ae6b
ebcdbef88998e38eb06a4189e752a233c8efd233410bcd92183c9f65efad1b38a87a4aced812734195fb7aa0529bf8bffea6c21224644e30415d96ff0a33498121ca898becababb7ab6149035f7ac840962afc31fdbbf92f14ccd0aebf11e9b856c501f630ba50618c584464eb08e8cfe797cd5c0f1937d68d7548068892c5
418d4af6c65f62635375e38706a9328e0dcb6b8d5cdfa9e04abc4fabed84b871830d4df135be25594709cb82c7cc736663bc585029c81cebbb14e5ea6ce1ed1f6d04aa5dcd4d54d660b3459f2df7a671fc066bc259d56efa3be862fe3ab77a68913fe6313fbf193b1c9546c86be63021eab3826b4cdd42ba40ba7f0312e9a2
07101bd275ac64fbed4e0420193fdb65d3a6eb6357342acf18760c00015dac085920ab9c317735f3c8c1fa62a818282b214067c999f965b156aacc6728023e9f612bd4342b374c96472fd1ad56c2d6d4bd9cf4cde76e2865ccd103f76cf5f561628fe934288972ea88db013be0eb0a7f491278898d657b3bdf8abe16c5287c
1f28163495c762d3e4164462c6cd5732d92777023f876d18923a30a0ca0578eceddc7ca1f9a9061c4b6650278d7c9a7b12011ae427d41c037d783caad18da0d964403bdaf030675f1db2268ef9c17e26bbb3bbae3f0ac962fa97fd6c208f659e7d385cf731db6801606df21eaee133bfd5531d0f91929a1d45f810cc4e169c
88690299adf04fc1aa1581bb92b89e0aa25a70abba86436c5a44bd62374adce0a899d6868babaa61920459a2e1eb011208b34db0470bce03c958a903a55082e8cb726fff2d3accef4650f8bc41272ae70a1ca717c53b504f797e88cda7bd75be1ed5d702aeae15f94b9df41a56a994225d30182ff1853ab73fa1b0a55054b4
617266bd9ad7a30197294e268834a98f237a6551adaaff20e5a76058567e7474557de10b65a27901571fae4f0bb0e2ff7335315a835396ac6481535fd7c4b1d57993b06015d03234db464447d3bd17e08d7c938080100563d1c0bb398fb39203f64e2a947046906ca6a2232a32758049754057342b230ec84a3f8143bcb12d
3807f557b1e62c1b165079c97d2673551d96ab493c91674fbd91d4752055d1c84b23c24665e47f2482697d57730819620feb60f2c9c0a9be0e834de889e6c19f14fcd6002d80c54c7653ebc8f89976bad83876c54b2f9aec6b8d09ef7747a0d5c23a49db9951b5437d587edf71c7baa71ecfc797f4cc13fbad91f77b4648a8
410d50ade93f7687598b99d77a96cba897aa2ff665f6f9005170b5c4a7834f2e695a595a4230e364aa1c453f7af8ce6c5f998a3ec02379479e26d07d0bc82cf64b77e452d094f511b85f17e7ad2773a18af1e0c1a36f3dac765bff75b1e0535d568123668abdb27598e5e9b20ae65af84cbb2ada8493723450670dc6304586
63a4e1cc8b9214386f9b01103f1ea71d2d5948ffe762d24ab9ba964acceb32df11ff576be5c494d3b9621c40e067dcb19802112be7364a4f383d924d129a2fdb0cc9ef4099d10d2f3d263168abf8341579f22a68a5bd2d2ccd7dfb3e9f2bde52223b194db1659044fbb53e6b8ca6ab6d307e927764cac582cdf8e3d19a2bef
b7c31e30b658e7b2574616fd995cff827c9e1e3501bb5c4f39592191d41a1c6b40291cc2c35a665aac3a745dec434ec12b0c228eac73001f015df00bb045bcff3745875fb701ad991a4deee7a54860b6026a4ceaa1e027a333dc1cd39edf754b713a6c3ac563e1a9e1251cebdbe7106f757481764dbdb38f8424afb5e76c37
74494e025dfe0d440d8f186c339be41cbf1af913feb19735f3832365912af757de5ce778b675f15a249d5972ec5be09a40ffa275f5fab685f31b1198c6de892fa6a382a6558ae72fa626707e75d0134a18be7b780f65958a55e54853f049e118afe3ff1d6c6d15fb4416ba52df00f3fbb0fcae680a6e48b35a40b1e2db1b7b
9c53e67de414bc2b3d346014042de9f4f4d7871aa4627981bc1a96379fccbe484f7cc2739f0175153210dd5becad4dec658e69a52a692ad5220c09fd9425aeede4a2e0984da6a913b19e0ec64aebc38877653e23b38b5c78a7e12e28d25a95c5567ff89c4244e0a858f88fa50c6240926e4d95ecde12766fa2aea1361e7ada
581a45d267631af944b792e7a56bd4b9c9d4394b2e2168e07391bca4e76473f8f3bf0ded98ad5a22f3534d46752160ae56a4f992b1ffd2763f51d5efdc28fdd3fbd8557208f01fcb9570cd2aaafcec918086267e7bbc709854d919c3a0f0cd388ed13c21a5be1e89aededac5f648ed0a85079b0ef29d8fdceac530d8f90d52
5b3e989adc9ca4de0377ea4f7daa8402503f3680885c391820f92bebfc48234cf92c09c7bb95eb47fc73ae5f364d4844291e412b9ba7eb536622a9501115b6d64bf071a2e67d741fa47a5c3ca85d92c5cab8932928ed8de7c165186d6fe4d2cb264e2cdca78285339b696178383f2ba550b5f74e2986dfe8e7e8fe81681a63
f119ab2483cbf0c5ace5e1beb81cbc70209e21249add3cce3be1863c431304ca72481cdf0c04591120ffa2f614c964cd39e82c39a95ffc6dfeaaafdab5117bc1584f700a1a3dc2f09589fead4274de97b59f4e37bc2d301026f2cdf5fc3a703759440bcee683da26c65194c314334306fc0f4b8b59110f6ef7f9f0a03fd54d
417ba098cb61f18f485043d56eb79010a3a9f5a419ac2f519fa7ad5dd48debfaf7d62c6dd48e34fe95b6660a182aefd3876c6c841c0f962fb0309e68e77b8dcb1ed07bc2981db652a5c5b930221205ce7f13d4f5449228c41e476b71953a9ce5d26540c44f8ec9963bba6472dabadc888b65aa974d824b10999ee450de2ee5
2be28add89c34d7eed49cf9b7230ed3a7d6a7f1eaae54b055bef6c65f37a9ec2100094a7812937d461ef019d5e734f5179e88e2f57a5d5d788e9e1a7b8d35ab2c175f021d17f1c2b7d1c9af9c0b935c5308c1631ea0ffa424879320d0073a3ca86d60a1e69dfd89648fbb4c6a59984573375870a662649211940467e14f3dd
10f24a57a8797c606a8503621320d896911a01be24ad9322b3ad7f5867c0b4c9883ccbe6b37cf32630ba1c17591b127c70f10357b1e4b7091b731424658d81aaba54d4147d764a451307f838f4cb449b8e3d2d54576aa31a2bd6d8de0ccda3bc2e84b6b2e01a2bf3bb259649c98e83a0f04b08d2cc5cb402dd85aed6892933
488c4d89105fd488b020db0fbfded47a79f352a6a18169ea82416bdda22a4e93c7f4cbbf8a7d8d9a8c8629e24b06e9485de82aa72b24190096d597489ac19bb13fb3030665de5aaadbce70eb2907a33a1cb736a9cff5543076ce3d87f342461c51b9cba505e5e3c4b2b3b84c5d1301ea774a892e3c28cc6813c5451e220f28
dc27d2d36aa9c3daf21b08b88e0e2b4f69ae7c3068c2802e52638ee97668c044f46d07cc6fa8f928f785507835b6d85dfe105d17e0305a0836c5c69999941b6326e43b235934ba37d5097b9476df27e9673b5e7ba709eef64c025da33f8bfb8148f78a84455ae4e60f7aa221220d849ed4e2ca22ac03c3ed83ab7daf7c1c6e
87dad827ae77eb03cbcadb3b65ead840be173ab90a7eb47b5eaf323ef5a6844cfc31028c8de1cefe410b8a1c9cab38abf4ba76cf03f830947eb83c5d925bee076a49a29126cee667c328befc45b79ab00f6f4555d66ce41f20ad56e0d9c66cffcbc3866daf29adc158e31e02d09eda5884faa6ea6f1a64b71897abb37420ad
8539882a536c00ba899beef4877deaf84cd2a9f263f42c134948b70a163f29163d5d0db8ce763a3d7d46cb7b93bbcb572f3aa9232ac4dfb737699ce1ffb03bd814e8e5386f9fedc3202d947f889083d3106e313965b4af6562baa1e9b7ad466efc18d0c7dad7c53ec2f1e5bf5d4c62b013201b5009f9a7aa1200282d4de940
82eeea7e0673ad1f1898f80976c1bad3e2a14b540388037660521e634fceb109ae7403d5c102bf5055bd78cfd8acb8018dee52865445edba2c9f485c35928b591732bb853f8937dde3038af6d84bc98dde1b311931d1bcafae952546232378d4d73be6080192581f94f9ba052b1dc9962b49e906bb8309bd4aec4e789bcd37
aa3fc0e70c9ea8cf179768dfc6806cd08683585139175d61cb96f5ffd315e10fc16861e2370ffe1000c9a67a58fcd8807de8bac94037f8aa68d0ba304a58512dc2217d1052544b964679c69118045c3a368c991b25a1f7ee690b5ec5ff55142025385e287843ced3766f07aefefc29ebd2a7e8d30afa3b7ec0fc3df4c602c0
50ba468ddee9ab56c0d13e5c082de61eebaa5c23f168eaa5f3f6e9a316482950be52361da75e40ab70a56572b807784e1663bc7ae1203257efa19bfdb667a4e1962141cd6c2c43360165437a2ce4344dc012b3db2ba2074249ba9acced6aa49f082ea91647d5154d052488e19808520326d88efb06b353cfa0a2694756638c
8c2547cd25d8c1a5e5de1bd85de5db1ad537df718bc2f49d3af1a4720c5d25818fa8d479ccd80f02962f896a111b89c55e05b54758edf18f2848a9dd75f3bd5176540f2b13f3b2a69a9f38ac46d63880eb18ec6115d142af669c203c0a3f9b56f3139780c4a610c7f7fb7319d24fcf7734d71279ba89a243523be782f9d618
c2f9d103304325e347c88e6a146f691706b410260d0e152243546971747878a9ad58d1651b65b98cb98bcac7c69adb1aaedfb882b22189a60a71fb340496b30edafe802a1fc8997c96e3090998150cd7903863d6fca0326224e45be1987971c7511cb4ff54c8e38c8af77e563092b7843f27ee740b4a1082a4b1f0e639d66c
029c0296616dbb060d849286b6cb96a6adae38c54692703d1558e96f05255585ceef4463ec7e4f5db9ec13bf2c5db8c3e8bcbb4bb5ca3bc99d68130962e0491f8de1a0b364934492f0e283d0e4b4c9307b66cab6e0d70db1897fd5a1cb035441f7fa7d2bcc986d62e6e1197db0924c7fc8e8cfcdf222bd2a435e50c80312d4
629e81e13d0d96d2e466f412660918fbbbb7a525fdbbb4e376e4af85dc51758d5351f4c7b939f46accc32ebfaf9b1a2bc17f176c7df803be4b4158b54149cbef06ab406c5ad0937145781b8f356d2170c33de5ce03d8cee5f2e63a57e071f5a3adac736acbb21b833e7e3c8b43a20fc68e741a22ad75d03317a4e5b02b8a3b
514bc0f205ae2a57276d265ed3a65880a254dbe8fd70ad512701689f93fcb2fc16b719f156e70d5d4287d3020fb2df8947967381d306150c94d7b8fafa596bb6bdcea51388b38709d730024dc4c0101b77f404076f1d458b546305a82b9dec1dbddcb651fc427e167ddd52cf16fcae86506d6209d47c731e44e9e961bef4d0
a699e733aa64b520ea463560a2c761dc4f0526ae2351ccba3df984a0239624d8678ddff63c00509c152bb7b86541b750ea2c0992b1c719d54a48200707167c46744f6a13b931a510c75c455193ea26e7c371ee1ab3ab80a3bf33ae356ea741d6e56645e5b15ca078787787a165b61e0ae8cf594eedf576ffe23b3f749971ec
bcff6620881226c3f061ea0426f9b0856ce8d3edfd953f9a87e5b91f1e0f88baa3f00d30d1d530e0a872ba41d7215be92a637d3f8419b68d64830ef6abdd473179dd326a78bdbe9b46cf05f33424528947b18de1750cd28be34aeb16c1db71198db2850d5abf2b4c224a3e00555884d9bbe8ca060a4596ec7b2941b88ea458
ebebc6247ee7bc11ebd1ec08a9816ead9a95f5f253068383fbdd08400d4b485c2bee452f9c40853550297b05febcd4c3648c104df806da7dc19bf412c7bfced64c201310a8b9e1277a33eb748ec8e5da2bb3317d6efb5e5cf99e033191bd5fbb7173077168a183f0b6f0b8e50ff626997ceadc82dc430f230db7cd17d48a2d
114a3de173a880cc00920e7cdf3cdc50779acf16c79506763a43c052c94f45602e3df043f385c2e9c34cf068d0b194afa892ba1649e8df6486d53b56574ee7600281ba7d3f61069c1a5e275edb27d984071aee152702bd20ceab84515cf8b5248c905b035c68adcf4c1a51337f54d482b17768ff038b0fc0c6e0c84ca7ee21
d8afdd195b6bc39404cc25a33d701c29de14f05a71c85d3e76967c70cc5927c6a0e59df60641e3ad4021248b8c137650ee71a8d40a4ac9d738587dd2469bfaf67ba3d484bd7d96e7c614c4350229269276e461e3cbe6fa68cf1668b14a1da531fbe58f309bed216b2c2b28393c1654a54702978df7e7a0b0284107b6b4c5bf
dbba64ad740267927603c634c0d7ac96b1dae1e4b576e96a284f1c7731030a2f66370aa176481d25610fcaa6eafad44087372b3e97778390700ae21a5e03e2a756d7d27f32bdfa542eedf20126a9da7a50cf9d0ccee82b00aeb9c6ad40cbcdddca0c18bef224c6720e90cb0b4a7893d3e9655359a2450a1e3b0591c9210298
3c905d76c8d289c9e73b7ce6e2f866a31232dd704fe9e6b872d19b3ea313b291b80cb91598bbec92fe5a4d7c62bbc279019aab7ba2b615ddbcec7d017242b40a494bf1c70a2d29fc86ae4322cfe9e8abd4371059beeb420e16c85afcbf3dced9dd1eeb5e6b80898905a369e841ca3130affd9eb8eef7c4a10ea877511fdc04
bb0831e5d455229aabfda8568ea5acad1ef160ef9bfaa860f2ec060539c7ccd97264fa56d2f55c4d6a161dc984e5029c831e2140e93609051464e075ee038a884613f1dd216dcbb028760507d6d3183f13d129b4ea8e67fb8096da518359068e92fada1ca8f67a20a03a732788513a7888545b2f87eddc7d77a0544a873bc6
c3e3509782796d28017352d4ed6b5828900fdaf1f2619dd6e8eee8eca11c67aef9aa9a94797a2b988f58f7e80609c4a71c100546ab3b8b7759e492232ccc9dd197aeb0d0d8364b22fe986455b6b4881e8553e24174fd074255307a0adb071c001fe14222c46804a8e2add533942820f464037a31a599db4a8aa95b3d649eab
26b14a943971a839ab62369815bbb2f33cb7fc4171a5e32d61845ad49571a6c06ec2fb3f5c99a5ae9b00b245f33df89c30e68006ac3aa50ff07c2d69ab36a1a65c10a6349607bbbcf11d1d7a08974f2744b3c221940591ac5fe7beef4d071492c63d007f3e3556d5c53de231ca47009eb05d0486feddc24771f2c31c49d27c
137ef0a505a1f9fbb49879da00090265548eee1330abc74450f7be1376007f67bc38836cf35fa6a5b118a1df0516057dfce1cabf8f500b38ea5c2ccf9bd7c782d8473f6cf476a40321c378ce935a66d751c7fbb817c4db84da8420b6c18b6445d8b4f7aed2c153fc8e56cee0b9313391df9a3a273bd14d5e03f0658af1a5f3
2af5dd7889cf9b47297f8d0db9442e69ac3a60631f86ba9f7b07f379598df634e7f0a54078fc37b2a00acf9c22a82ab7708cdfd21344424f29858dffd8600c018343c7f7e6a4b5c314482074ab5bf9bd0154d880fcef46c5c34ce9c03760176ad7556caa8e9066494bf5331617340cc8bfb055bc851037e0c8cba6bb138203
1924a99391f78e831271da1335bfdb4aed62b3b1aa8cc8de6f6a4e563440568f0073dba9f727412e2d8bbca6a553fbcfd7e39674c8163a97c07ac7eb6a3b0c3831812c1024e4c45cc2b25c8e7f60e41bae9febaadbf6291827e14152a49f46c432d0fea1445605c3944628c8d2d6348ac3832b91a29daab1e35cc822ad591a
55bc9c2ed8f7eab49045217d166c4c56fd63e6cdc7e26e33d7e44834b430831247c841b92ed1e53fae85a18fe8630eeb6e6bee9fc43ae272b4c26e478fc6f6cadd827176d01bf00d05faa76bfc40c76da2d478b041c93af2fc31bfd41d57ff1af0adc0bb60371f8504d6ce3f2a03bee2fe1c6966e09654e0044dde45dae165
2c82b4e3ecf67a4f5a1bc860a0325efba4b170a0ad1ed38fbb95a2ed60c612b27e3dc186095ea973fbef91ecdeeee91557162efbb5961572983c8e1dac5036244c29ee6368b7999bebd7e43fb6f2962da3193df878d963ed12677c12a054583d9244cbc0bdc45c7b2b6b3797e953b9dea36b24526d0148812d6551a6754877
75dd812e49d49c8f8f6c8ec9a099c2454de10910f1613a88c78c9af3eaa09395e3d5f0fe14c3c58eb9e29bb01f592c4c47e790056dda95e9c25796f90e3aadf60f3f27a3abc3df92af172630d73ff23bfdf5af775a13b52299b582dde44d3dedcb42691a9c97c7e0ad976d231830746941006c5614b80d6b56550a090c3863
2c9797668a382bb95ee90c643e999312baf5483fe4b22a92c6800e887300420b66d0ad145285a131e5c6f78dbf76416b7bb3ff8dec59cc62d9f468afd0f96bb8ab152ccb2c8761be22ee0a197ccf85924d406d45346d006144e047027548142554b1e83791f5e9914f23d7adf58a50bd8664cdab0e83a2d1ab4bcf6abcaf77
ac2bad4b442f9ff35aeef625c26ca43355936afe58ea7096cd367d4458c6b8956b1e62b75c3b68779ec3bba615e552129ddeb5e794bb286a31fda710e943fa6d8eff8776968e829196806f48e25043d70d7a96ff9e4a3859c30868a6581e2c9a670e0c5bd4b39de9ef0ee353d0b6454c781183c364d9ca8f7224d15fd30f73
728efb6ea030aefc96c12803ad7013d042e9c76b0ecee075a3dd42156bac2d47d8414339e95d17758b2901163c343eb0f24d15b6f1ffdcbc6d78fb8d81f434d3a9abf6d613a7e01d63fa86139090ef761723ea188389d4347761cecad6b231c5c0c1dec2c1bb70f996330bf7cbd1f8f820a5e9b6db2d68a805198d561ff09a
46131a072549bd34b418908de30ed6c647e0f76058a2ab9bfb9568cc188f9f2aaf628b418dbf5bdc903c23fcee8e787b2f42caf02d2352fe7cf3a3d384b5536cd68dd9d3085a9f42820bba606ca79a71b356bfec71f2191cdacf459b608acc7005499590d6b84e8a84d4967b2be68aebdce9c413d591ede8f8207236e0370c
412e121070f58bc4061cb7e36738f4ed6cb3b316319dad047ec3ed66f5b9e6a3df6d092382a9965dffb31da530b7945711dadc5bd387e072483fd2536d3f0459909909ddfc9f7048e9fc3cfb5822e31df6a6ff4db6a10abf7b63fe7a0910d74fc14dbe1113cb1d793df9858b22f0dbe890d4423c591d27237a509d1980c411
a826d0eea0a4c2d75283a6473670b3468e36bf715cf2a6635e83c457a15bdcc06fe168651d405312d02695496262c9bc2907150ea73e7f689f59f78427cd31c4b4384e878d60655bdee11945a659957a7957506f417bce214675ba48103b6885a806650f91deea1b1f1f887dbb827ae0a7d854e01346fe6eb0297ba9456925
80093f5ca67d019ad68185b79331e180a52a2e071252f2e5ecc1ae8a949798da7d7b71b8c58ee437f103d0e91cc16ccec6054824a573fe3370d93e814a94c431a8e03d2237258c687e28254e21b794c6d06de35e74858f10139ae640d3007e46874e9311319c87bb3bd872e2851cc0fed75baf319aef587bafecfc39293c9d
719b2de88012a07df251c14609247c0ae1bc63ec219d7f773e512577d6de83dbde0f148e4ced05e49ac1478ffa0d4aa7907b967e4c0b22d0df2a0cc91c933f28e74c3e8b70608760d054fbcd8be51ee084b249a61bfe1bdb2eee938438a0b02bc738dcbd74600a21c22878d88218e8ce1d8e84085222d5eb1cc8888b13adc0
f0e59d918454d8cbb5c0c2014c27fc297e8259ab3d70bb198c4ea7543ea92a230f22f564f5112708a1ed82521de2310f5cf7662dcf4e21d255b5f4ae48caaa3341a108d7886dc274431237740e719ef71ffbcfb097235062ba1d028c450ce7910e803b0900498956af113485edb3816c20aa6457dd772e6654bb21760b4e6b
da447cadb9e0954ae77fdf912d1808da9f0d631d21f906a9e93afee31d470f94d5e5852f35840bcc2fbfb248dfbc4b128558e39ffd1e157adbf49e30c1d03c54ae2867cb8a3ade56bea82e0356ba2fd5dc9256e772d5e1a8186e994d310a56fa5f5670729818cbf8013c6ec2c833201f1732a9a7f58c669175dbe00d89f39b
c49d684e1c293e7d7cdb203e74d5abd6ee66b328d1178cb692207ca3b2584834607e618f52da9d83b2f9286a196158c754a6a4dd04840b9e072824f3d4ab209e03d19a6ae1fc574ce59e6b596eec1571719bf2cb2920828e0e6d2ca0d1a18b8d64a74b0c6f6c1e92b9f5ea2afdeae8d77e5ecacca0561e8df492475583499d
4beea87edbfc8549afffb6032075402270b20ea97c9badc02cbb22f973fc9eed9cf11047f52c55bb18359dc6456c8a054cb58e6e4e3c70db9bfcb960f18490064a519be90f1459b31b3fa72810a30439d2bb29064867e8a7c2fb91c140e583e2fc381f2b5ee74e053864cd113ae5baf6bafb8cef1a3c6bed5d92301f044bd4
328ff65a97546b16834c26f93c0c6834185ff390668960851d8731b93a4851e847b52d80ae6372f5752d900fb75e7468dcb8ff5292b32b7024379f2431f73c947621912d0c73f8ccfe280cbc3abd3b68794ac3588c3331b109eac4ab09970455f0c94f7ab9ae14188fbdc22133300ac5e03ef5ab5dee9b20ed83fba7f6360d
d9ce3ad104c85b130bdd9a72c2a75ee9e94da9da5c5d642a438fa55c33923e30beb29b94bb5b985c4ed037e103c3e293d3adcb9a1198d51c676297078978423fd544b3fb53f6507812f94cb3c62b3d0254fe97bba1631892b6bae71208a00f04cf245bc655f1c2cddbefb532bd16678da878b58a404333a9ca1a59a782e8fb
8507bb44a1cbc0136f7bf8c136810099a7de35272adb6bd2bf358c4141c7f43f8c9eb87017a0aa9bb626e1b449f5094671f3cff3f84fc34e630cdc0c05ab3cee99f29d7af762e01cf78452dca64e64dd77ef0e47b788ae5b6ff51d2d98460c7ad04e3d595b9726c758733496ce6c1499d8964f07519a45a94337639bb1f3f5
9987f949a832bc5386b045e55744faac4bfe7c215998778e1e78482eb254a6a9c90ad30c020c71a3a0cd830b84abcf1b6941424efa33a09a234558fda5f606e9be94f29f338144451e65ccb745cd4e54450f4d2747e31407575effbe5b7c0c0d30de1bb0ca1d69301ec9643c09c3068a5bff958fa6f435c4f77f9529977683
147e6a79251676b269f09269bcfa8fa1da32cbf7dfce981e5bad1cdfeb2174010b43ee224d8d5d64603bbd055fb230d419b77d6e5cbd374641794554a0365f405b523cbe6ef97c10b84d2075594ce4757d8f9128a53e34733c60a9296cf2fa2645976b5d5519bb5d8eb3630ede228db2dc6385c00b4b7aa2fa9c638ee29538
6677357ef296f817875432a6afb4848becf3d5a25c6d463c4d5129559039b0699ae89427cfbdeca6709ef743bdb7a7f696a8cd79b7958cbdfd3c4eb8e87e873378e21608a744418c47e39beb1aa9bd90492075b398769d96d44bba117d7cb9c6d8e9481ef89ebff6d9af0e3ec58a4b42176430bf6b55ea2b7c329fe9df27fa
4aea018a290628548a6e423c75d8d394f7c21971ed9d5551c121944b6a4b251f1ce8717bc8937da482f38ca4fc6624cb66db9ab63e84b2c8fdf24101b8e4215a8df03d4b452a196e73f4439830ec29545c5f316e4afdfb99c4adec243396981ff7e108052cc5a10a6c4603eaca5e24dc6c39dbddc5d6e44fbfc1e99e2b7644
b91e71cefa009513c34020ef773738069b83c7ca89ed9530beb6c4250dfbb74e49f5c253f7917b87010f437bab33f3cbd2798f239ea3e910543c0907f4155f884e5ac18b5bd9d66c481a3d27e479921297ab79eb14e375b9967baeb254e534b82db9129a2166070db49784649b763f44e619d03577c1b3c4ab7ca661e36703
850911312490cb426ca8f0f3881319865a7b33aec6b139020a835cf2f04c4a255e88293aa3c6f07787f0633fd73fa98b6226c9ae26962233eeb2af2c45ecfe1d69341e1866151efeb44cf3cc1ee1e80f8b4d6299adb1788e84734ef6f24841596d36265850b432bc94740b64c51d9b0be6ba8c457b6e6329e41fffbc7ef13f
03d3a803a77ad243f9e30fd81f28a1958768d9ec07b7a14b653d640bdd051fe9b663a4a0ea5282ed54b7b36577cc6c1b8fefaecf6c438e79bdfee4e40a9f7288269cf26068de42c8ce079ca04fff2b8c869f0581aaaf6f475cb3622c3d3afaa19f23c692be0b9b7ea65110b6b04e5998c57aaf51176d636ea63cb583968fcb
4c7f2de1684d8a3b5e8db683e3fe618d4263ba929fba4e79b43b24a101e56f82ff6657ff7ea4735cb7cf8f8336ef279a1e5e08f103b5640f52c6511d90c56bfd385f6794e00a401de6fd27ce1dc88c6089de3c9a090ef360cad44d519a1c0cc27b0389f56642112e7300ea3e02f62b22cf5280cd9a50e0a19318a31542f288
8d3205cc2d4ee2a24adb3c506cb66fd524efdf3d53d2ae0a22bf49fd12145ff7d3b53ae6682cb54747d5cf158edd35415dc152f9b20e697a07ab9a7f8ede063b57c3701083ad8ce42d9a9749e8832725d839308c6263648446559881eb009c0b8ad170e8468f23839a2625d80963ec9bc077666b1837d415fc4118326c196a
985137e4a401aeb17d51af8f68d7304e9917ac23eda1c265b39254efabdf25a78eac26021b724fc480b092ddc8a49c60258eaf3683af9085e6f8f2eee4fee07314efe5e7078cceff59f06d850ad732873607430fffd051d2a6bdc7bd46c48775e8514598b1fee609757124c88959ecbc40410633285359fb43284361d5f3c2
6f33f4cf7650c517bbf84e26029351afa0862198bce1156b91bd8126f8f83c5296b989fb8065678032d8733ce1d8fc74245b385ec8491fa0af85dcbabe67c8fbe1cb6ffeb43b17834e0a5936ffa93e6905eedef3b905a38b8cf42c5bf0c18c09fca346711bf3aa8a17606ceb5bc1d707aa0b80ff41372905edc934343c1864
fd12535d53e5283a8571663b4b94f6fed1d0071a3c288ee9b96cac537a40c2d11a690093236ee8f4252d37cae733c3babe4e582917210c927c475f60aba57f4f55e8b1c41e3adfeec1a783fa12c0b4d7bc51ab2e72e27348a6e92c67f7e15106bae457a0614c739ebe629515f336733e2b1afd560c1f901889e8811c78aaa6
d21dc8b36e02aa09eca837cd9cfd1123ffa64dd87d8d4776425f2b31a03fdeca100981d2bb1614d3c32769f7818130b8c63c0c619f3e7f4daf53b9fcdf38aee5f0cc5cdc48bfb146f861445309a73236e0f2248750ff599b038868ea3c17d88960671248e8b3fb6972203c02efb6038fd1ece0780248d19a0dcd0fff851dbd
b11e49af421d6754e6e67b096dd032688415cd77f97c4ab1399f2438e5893392e7f9493b004dd85b1dc6d1a153a230a1af6b07fe2af0566254cf13c86379f106a6f874396ea62a6faac15c860ac7ae519298b940e837c3885a126d5bd600d48c8f1e53398c7e94b488caacbc7910b61a426109ee6cc7b47605e51524c45f23
661f32b4d57ca0ecd2225f82d4ad4268704ff48e67beab4c0c5adb404493951b1632a55929c24319e66cd0e79f5f735410d7390dd3373ada581fad73faaa6c0f168b4c21f2a077f07ceef0b6ba0d0359e1dff4042d83a92f0c92fc0a5edbb74d55d0bdfd30020881648a8fd9df5577699bbef975834aa4c770ba81e44b711c
e78557bb722116015caf28011c6a52e52e5aebf97b61415c6874bb66395b5a198f1fc8c4f0a39c549c7427ead9666e07a39b706e96c8f266e3cce19e6d11220aa5df8278efedf774b53b82010eb4fa98a815b58a39fb0636ffb97d6cbb3584ff0b0aab4dd042240dfc670680ac466dd43ada192b05fb590d7241b17b7e25b6
91b7df257d283e22946deeeb22323a00c152a6eb903776752058c37d4f0256ad982ee40b7116058964ead43ba3e66e142adec057596bc882a5770416606d4a6dbaa6182448619027f056311a8a96981b050a92bb07d8a149d4045da55bbdb1f7cd110b27986e4083e954c46842184e71050d88df867a226483b255b6e2b4a9
0886fcdab6d140b7b8055f8915337867747311cf0f3fb09178d69fccd658b011b9dba369ce4f6bafcb03900f7fb6641fbc55e793fe025968a624ed4ddaa57de522ce4f827eb9f55a090bc438c81bba16e27e712f6442c6b350ffeae3fbd7b69ed2d7a360489d49ad9316d74e5fe98c3f9718b701892d4070e987fef1b0f661
20b0fd7bc72a9be0e9eb97d245ffdeb450146093fb6f3cee2f5b4588943a74a505b8de18213faa1c1018993388ccde892129af5b43c13d98414952ef4052adc798f260380a511bb30383fc513e1d51ba3acdee3b6ce4ab5120afa23a8756d977756a7f8417b81237dae06e28ff4ec65776d55096378a6d9b70b3b08320d684
0d783e47eab156fdd15e41ac29c9272cd652690a13c3a5b5532641d9cc7a70b64ac7dc0aa25697f10db8760dd5b4ac51f63ebe593b08d1976dcb66596c5285f829431d320bff0a168d1fe972b625225d62a49933dcfaf2e76ce272a772bec132782e7ca62c1a43f784bf9738414edc4c732870687d3eb71db38df4d925969c
3ca6898d3bf8920feff10ad964d7ac7a62c92c47ad96e355f25788121abe72df747a3bbd04706adb870a41736c542979a1ca3d26a8e23d3eb0ee81616fea622feea5c163b0c33d544595e84880d4cb8f21ee6cd200563fd6528a1fad33f58ec42d1e19add4106791005787270538e4659d45a45898dc8576e67208ef988bc8
fce7517eceea4a6dc791c5387216efa4f7590396ab7ac7918df5e3f9074e1e29b588f0f32f03e756625803058dd59c603c5f0531cbc46aa27e191a8e3603c4918e8c461598ce92e39750b0cbf3588a92f859942592a741c02eece8ec560a3b7b9c0526ab5ca1c98ae1e1f314889a27b32eb63bb2c358680f8586a713a149e0
01d6d6122304c418d0ed06f9130d05bf2153967b5d2b5c4b31d8f36da4a60ce5925afaa08157ae424aae9767a2fa1f27d84bc679131069b85d000e047e2f697d9fbe9f0bae72d13f53c374a956a7a9057ace4b841ae72aa4b2d88a71c4d60bdaa19c1e2853343671fc879c2046a4503a6364c3b172ac2d83fc6150ce903597
a78075bcdd56a70a3413213c224f7f9039740fcda825541394f52a2643dc823887bee16e80988a903dd99c61b60008375651713e600a4bba063a0ae844584b541ddb20648f9685016b2896f3f25a07bc4ed30d11d31c6d81aa5a9eb5c50a4026e6ea08d554ac5934f9515fff0232944dc17e9b9df6427609b55a11ba895f20
b037160f24a3469ec45fd33e127fed7934a6573bd40065b5055c08f2e1f648def311d9456f568aff7862677427fd7b5599c3c0678a3d5bf9dd9d52c44d6e450d51006235f911a9dd07a510e1f41168246e80a3be60632c2180867054a7abe9170591f43749ccc779aee3cbdcdbb336885ae6c2b0958370ec8d91d48af97709
da5200ea18bec67680ac6c26fbd9ca71fbb880f7a795531c58693375e090d280c40d0ff79a92cb3d94fe8ffa2553ef70fc313a92c11375068fd578e18308e3673462f401b2be5c032b4fef287b5aa5911eed12be5a607a9f1e84f1659a2bd08945d5715f59d49fdeb0f646b932bce68767105af490d112f49102fd214b0cb9
6eea7a9f0ebcc225fbee83d202e4e459bc76f4a8447239ddca52c57618139ca0b64f2acb34b6eb0cf4e8ef82d48ef1866b1c869569135c429669b0c9312bbf244cd3af74143f1dfe78e40eca7d7c75556051d3d011e8cef8bf5f1cc734d1992b0e7ab9f052ae5c9dd8962faa2b3d1e536d205439d954d691d5bebd418016b2
ccaee36d41195789987622ea0b014426e59a6ae28cd0774b479e732a5439c94c2e52076506eedce07ee8414e79c91d74af1296a54d02da2e1f1f6fe238d176415e035c26373b60735635e5b927e25063e91cedb11016ed3ca447f826ad4e424bdceb5ac903456a4ea75eda2259e688f53bc05a7ba82c135086cc9f27e5db38
920378515738dc84b55e5a252a99b68e4e96b7c694939341a25d019ef1da1379b59142434047e8c1afe0d1fce8c956dd90c48ae94308edd3fbe91ea6c6f7f0fe89e36be21de6da2192198369b117410b4421c53e2b3c48c4f4ab94c6143621dbdd3eedaed62a7564628249953ea2172e021741f88ded904033101e19e517f3
b0f00cb8679e7cd2f0dcd097ae59c399b782419cd653843b612d1db8c0b030d66bf506aec0925eafb4a72bd66dc2e67822b237fc9d4409e10fe7f7dfb227bae6fcd1290c909cb55772aabd88505a2fdeec02f5c1657189997e28d3fe061c52d4c69b7ae1f0933b7b3da8e6a431f097efbc317e027c95fcf984ca4cb555c53c
add829044939e6504d38c09dba200f04d17a4fa53c1694ca65e4f2cd33650e08b2a30f006b24190f0f47d7472f9b33416266f6f6c999c0f6c4f8dfcaf3d490693152ad693c470bad7971c137102c80400b716b445931167307cb3ed560f13fde33e98d54ba0e7fada3da8c9b4e7b829d00e103c04f8b27199e5f5c3013f963
f98e2d81cdc49853bf118f21111a3e3f05ea15511297d9638b881fbe7d49ac918579ddb05f3a5c83536a3867acf870dce63f453006f9572c5bfb70eeeaea8e6aa813b3ebf6072e8188e7813afd7945b1c7d3979448ed24d7ab57c731ccd409d9e3512b9574532a8825f73ff8876cc705873a49bbdb00a006af1f7bed874d81
a59b72490926fa3aa2e1ca8f1aeb846b32a7f9bb006571003dd62acaf6dc347be5831efca1a739e07a641fc6ed1aebd75664639b490cbfc2f73000c86546673971db139f039333a27ed75b3e8102a9a3ce5db1a319d1cd507f6f9958458fb23ffff21ace8e6e9bc1a6c79cb2120e93b60436a22da9a5d5924c544d55786ebd
c873fa23e869be4a7137fcf6cfb9a910fb891f3965c54309f551ada31f3e15c14abca9afc974bb75d790e58c790a61273f91b5c36cb43853b52b45c5e150060fa7a58e54de392d448cd9c573ddad6f701501e2bb29ba53427fcbb739d2b4905d3d296bbbb24f3dc1385e29225e6c70885842e8d771ffc68dffcedcc2ec28fe
0c0714413135ecfb3f08845612c128707788a0c348bfb6a2a8e295fde05c1025d590bf08240590289cdf93a5ef601bd8ea01657091dc09b5f8995dfa5bee39273b0efb1e7f2ad06ac37ad0e58d9bdae671edd47bcee1bfc7554509f7c351b422ab5224ce69fc4387ccb48fcfc62901da4065e24836ca81647cedab783b0984
bd6a5f514432503b10da6b4b4cc0574697f61bb2188fa4a2e3fffdaba8ca2a6cfe7a14aa43fffed6e0320d5fc8fa1c2eca1cfb4a0cb553eaec17f8d0ccdd074b4eb7ca8f1a364fe3e7b1c760049a94576dc6f87eb7176e5e11c376e6e6d0c19a21c7b65956bec336a50fcba99cc0887e7611960f5e387d083fd397eecfec35
f180641fa5c7e32e62598d9f0c09b3e1cf1344b9ade21f18211b6752cb8fd0b54f1d645c913f2c481c65539c42719d4a165cbf743b7ca66784018ae589332c360d43352255da474ba4a6919f0935dd35449859bf1410f986ebb3fd0e70bdd81496dba218d8783f0574472e2f87717d15b3be0b28b9058dbcb229f42e627d15
951329181724a1e1552a6774d60d8dab63f28780a6f584d91b498d6e5f215de9970964071845748180e95d45b33ded017ee9272cf143951d215ca7019a26442cfc0c7506cc645b0fd2f002dc5337a171d259b33a6e7aeb9b93d60f2267a831800071ed36a17a4edb6148b1b30222853cd276769b57bc184ac99b3493538867
842931c3e2ef9ee7970d2d95ac89f04a95c0bd79f63bc097b680f576177a4a10bde0e49d8435f66a5105b8c7c13c7f0c8cfb392f2358d6b27275837dd752ef656374388f3626feadf5f51b06e031dcbbcc49029ce8499bb4da9a43caccf69cbd12b96d25e0f494aabb53309f4621c525a9af4ed84abbd4aba8f9655f0a46a0
aab525911acc9ccf03eeced7ad2311fb3f86641c0e7b9f97b78ae27c46b2808d0c3f2e62be1e32b4b9a6b77dd7540ec2450e06f1bb67088e5300b166fdcb52717eaab6268a6c9b4e0fcdf5ee6382bd17dca18924bbd092c2372de51e897c9bb59979fbbf4427150e6a318a78f9603f32e80b293c1335bf46b27398fdda7411
bbc48aa5d8d2ead6b89d2c45f0166ffcd373a8d5828f96c14791feb54f8714e4a1e71dfa372e66a3e83c65e3c14d041c62cad3e75d995a291151aa49649245aace0930f2f98cb69e7be249f8e763079752ca35f756985abaae8ad1357ff8a5aec1b687ccd64580f0d4cc800bd236a59df8301b62657101fe4240abc8eb6df7
718cd1a12c9d3649adad1699806064ba193cc118e5779a6bbf7d81e9e799fbbeda940285b5bc0988f4c18eb51e43c6eb2eed08ba7d14aaee2dfbbda49515ffd92be338402a6598d0cd163bd8c7f8ae7baa05155cea81cff0bacaa0c64e455af4161240ce1595b2eafdfff948840d632b4a5306b777b00eb280eda0b6591cc5
18fa126840ad7ddd886683537a5eed3672d959a3ca62fed702eaf1aa9214b994117603aca312291788d55e38da6055f1ce555a5505b27ec35ce002920288099161941e70898559b312568c14575e858e6eb6b7c44ae161a0ad68a6b0eac6772923866139b884ac845e5a101a1afd4905ed7e26955833c23e19b5ae2c0666e1
ea02e430ec95c9f61787790370f13cbdcd1c0cd546c844bcbed73edc2794e90e4cd788da361250c813b4d503bc5c9a2f03209d070677c19146f31ecad805c19b02164ce0c704ea0a6a6eb8701b2293e16f19e9fdba4ea86d4ed8dca877dad6cb9b4fc4391454348e5bda130417c4be6cd800d6df1b5b330b9d0dbf6042485a
7047fa9e8eb7abdc2677f902639c866a4d285fa2b203e70cabbacec7a2a145760aa5247c00dede40f11a4242c0b65ddd831970cf63018a582ffe2650b4e2947fc07a4653c31814a1008ac50b2dd54366d14221fa00b7464b6d8f042b4349c7b240a625c8ecccc54e0081fd2209179b833070156006ccd88a993a76d6e9a786
71db8c9e641a7ff9b633c79d84775127564ce6f9caf19c4b5bb0b2ab6ad079ff84d7f1698530d08420a2fb2e34dad7adcafadc848428384a72a11fbad4c9f4f28793a99961205eb798236521bdd2844dc5af730008dfa756c5dbadc010224bf524cbf7b7db8def1dc737f8bc8bcb47b1b15ac03f6c2e05939ea91546396ecc
2c583f626c18ca1135bf4cd2aeeb2ecfa81369d39859f5bb4b18e2e373da035018fc65ba3985aa1ecb54bfa0c5a40cbdec78723cd6ee9bc45805e76a43054eaa5ffe570524e5d257049f4f41823d14f87e78064f558424c0d090f1e8ef511f5640ace47a7f2e2b67cfa1fafdfbd86ee3cb32c1f1de18611721e84955ea195f
5101f75d967a0a6b75f4e2f5e9097e550fc40eca5c0b4da7017addc712f47c7f7269efa01fd4a0b51d5a678a53ed9d1f9d764d62c40caa2463d2739afe08824b87bd8036f954c059b3b047bb3237c82f71c4c32e6b073f241b42ad85a3f58fb2f6e1397e22dff7d9432029b446e92c16c34082143e1a09d851ea224bd8df98
0f8e9e5d43bc5fde55322b19febfa6e9e159168ebe66a3dd0ecfce47320cc409c69de29512d1d5485b8711a24bd433ecc67b4eab90598abf6cc262169287f5443f364069109c49ea32e088e9336aa935eae0317898020c27d7c64f95446bbd5e00cd96703927567bdc3b2cf96e82493604f2071d64de01439da005ae39ce64
e962be6b6f9e58f64df0b0af0053a190eab88224d90c609da37faf81ce9bdad943b22baff6dcb601dfa0fe9bce39e506288469d977fe0dd02da140988f0e8fb46d372144ea1c9b8dc4019a0748ecffbb3787a4e7b6f05039bd16b2f0b401ebaaf360b0cd743c1d5ee5d009fda08691c6dc22adbc7b56ad46f60098e5027f7a
ef2e2f52edfad680131d4da2434ac075bbe11f10a68f545b345413fb284e48db5a19089a8ca166608e7c9a1c04f62d13319c26911eabacd5099a0e7dcdc9aacaffe54f3a670dacaff3413b1b4915df52b2d4c8f5d3bbe8713be9ea6240d1ba0c2fa978216b265ac075bb3615841b548cf9baa9bd628959521cdcd8fde4af2a
c2a8f6ac923f979eabe7873b6388d5925619e0bec3ac2ef7f84bb4cb009f1c87ca9ebeb1f1a9db1371705dc28da8a32b91447d388b1d7c75e87331e3183bf21f39bd6bd71cdd6abb1526697d815f1a838481f6e2b76b6d68d5bce805d0354889d9b0553e10f03dadbca811e2d127b5285cf9ca5f8ed8d1960c9d536cba1bce
ae37a691d37d4b88229e6cbe08590085dcbcfb0cf83248281d8b22a05da7db5863eff21faefe19d09b7a6da3c71065e83fccb0512de5c3456db952f813dc010184378158a2d02f655eaf96d8a54a301d5ca3d533abf177c01e85e293198b77237e3fe1b6371424d7b32ca806244dfe670b020c5c216176ffa653bc21e864c3
6b3d1c28821814c2468c81f3deac81cdb6270152c174b55ac4e9385138332829c7c7a9f70f67156ec163f69408d6e4df606e954703b266e068922548e3217aa1eaf1570b23fd2fb77c9a6d24ac8a470dc46515d47ee250638316720ef8736b87fe546dd398a1915c73005ab8240e882fc711842a33c657ca7677f442281712
fdc675b129e0d99b639638bcd333f18afa0e0fcf4433b6347457263ef9685dfe5569cf32182078565733bfd3100afb9fd7e2b7f79a8cc3018dd7362f3a8cfb9643878a2e588930311ae6b5f723a6824a7405400dd5b10c477184823c419716d7a10d65813a54233f0f0c8e9863b84b21c46eeda52f7f0e705a5baf058a81c8
5d67d265ed696e721877aca542f2c6fcd2ad4877ba2b72d20958d70d1e7c563164e8d97e740af7fca61b9931f4fd742c9da468f70823d28b5eda50be6d82640f5cc8a391a20d6896db44c157118d6f169781eb40059d71477455718220ef153570f2deafc4660008aab2ec95472b8d2e75d5e4650942452f9b804a636ee201
3340ee49f742b146034816e84177054b5875a1be003d15b6fade47d1dc2c08ea43ec5d2aae49e8a6f1a5f212ec8a89e38df719db714f308de0225ac9428f3708415d9f14acd1113ed3c2f4e213b74d3f835847a63340b8db6548fc8d9ec9c0939a791834ba04ba9aa55907d47b5e7fb283ad67461182816e3f0bdbab5eaebd
c7bf3989283c44ae5a5e24d6a8035cca5cdb39ec9ef8c253be59d4e6d88a7ee7391f9f6b03434c6031df242053f90eed7c25df22f8fa6daf0ff0885e3881a511c00b1dc9d368b2cbe971106490a0dba7f9185e488df33eb827aa86ef9dcbdc52fe8255b024961741466de548cf28718739ce39f98e09a3240201cd48b971ac
de9eb40d5fda3f3eaf2d70e5a01d33480d2b7b4de42f58257c134919a604a44efb9d68c6a48ec1e306c828254246731485d711b7ddc61d904fedc49b614472c8696bf1ba704b37d10828474263ebaa91e7ad70d52565c01fc1b986168d76ecdc549ebd5202dcf1adb178cd7219854cac950fe6437cd719f59eb00c13e0aa9f
3129ddbbbae50e7e7a0ca6acd4ea978e79a3d02c94e09a681ced70c613b6ce188e8c327e98a4a8f5739988966da1f94ad580e2c4cdfa1cbf05187e73cbaca527aa31184b2185160d651fbc20716e0a09814a2df64bea90e68262c8da41a94fca6dd374af7d629149b1cfb4ea6b653c009365ba920934ac4c8d6dbe0979a094
1120c55768000482c8208ac546030e42c0be371470786be83d3bc1562cffd1dc3447cdaf018cecbdff7454e6dacd04fe29eb1ec0206bd1b790e58594f07e72b6d283907039128ab0404f9e81d0b86abc33d72a333f6ac31158103bc1c3a44fe57567e034c679aa57e6d27df5ac3ab97d14c5f503a5ed142b8259e1e887eb0e
e54d1a286f6221af61bebf9fc02cf1b06628a19d870c465e949f519eaefb6eafaa3b0f933f5bd31f9179870597eee0fb25519784fc5dbe8553878d59665ceb483c64fbca056ea03e9d722a8554f9819917d783099805c1523ac34a01a20f015fb606f5bc44b6a807665048a290392f5478ef4c254042bd78da231c80a4dba7
097f44414c888749aa2b5035b71a244fbae37261fbafd8621476be2df66d3a12046ffddfbabda8092d67ccf4655d7b95986cb057d5b81665c31df1b1cb7c72983a05dd9b997318f8e765def71ace89af9b60eacbf07e26e7883b22207f3d28b6a00b5a381e13989a6a9200e513a55c8bd8823c33c2a6d16d109f0344d6b4d3
9d652c661f89a6909e227fabedc66e0ca7ca450a0e9ffa2df4233633b8890a8d13e3f7d9ab4ad496c452f3c54e17ceab22dc440940661928d5c2947758b3d59a75aa226546e8a03f21f169b0ead5a8b6c324187ecf80a1ba62b94e1d6e498cc1f14287dc61e4b14c890714ee0134ede5270419dd5878922c78fa38d959e704
a73adb1e905d4327650d7bfe26ea8aeb3e86b5187736a77772ced8facfe383664afe73149959e7b97e93d3077de68d4c0c6392b5248f38df715dba67e293e32071477f2cabf9b12ee361985b0ea9f8de8dcc05bd5310d2114191df44a99a1ae212f99e28a2d9ee02f50cfbd7f482099aae40ece49069ab17c82d51e4c7f30e
e17136105eb5ba71107cc7d4a2544f693a5384cdb730323acc58cf07a88419b6400755d43356d0cd211d18617a861acc1d1fa0a3f6aa75a306fb5c2ce80705686241d00c4a199352a59bc8cc284681d6c244501508ce69b43c8b798f3e42478e5f607406545954b1a429f141a4f8e1cd3b7490470f281f9bfd245b9a45867d
23ce6bcad7dadaad3eb08393a55ea99d3e52b524d741fe04df930b3daca9ede2a6006a4222087763e5b3e3b7f8f6e591690daed0930be18d1278ffbee735d63b21aedf13e31247232aed70093e68b6a2cb2ea0dff2fe9c571a0864132c820b9c8dfc9106a86e5ac08e2438a5016423fe572234b5cd5156956d0949e9f77951
dc76cc6132c9339c4cf2f9a68e00354bc4583d658b4ef34e2ec95a2725cf9b8c633fd9ee2f5d6f0bb4f38f642d5cbbfbee888d55f023f3370dde4f83f0f1633299b806458f55231e0debb05810858a4daec7e988c111820354ebbecb96ad0ea7a49b87af79354e9c81f71d94236f58c8eb406635e58b0f76541b563e9bea99
5e9507a4f3aacddbfc3c44869dc07c9b2fcb51680f76fbe9abe72f648f161a9dd073fef4906f7af76e136c98b986db5d4615b6f1ffdcab39bb59c5868d013f3caee333e2c0a395a36eecde3909328140574080e71eabdf045a6ab8b5ad563a08daedc7a5fe3a0f854ca66d512ac0b74b4927a2282638a8cef1e16356a98aef
5c5cfbced46757a41f0772646fc6bd8a02098c68cc2049f53b84420e53f841a1058669cc7829f982a8a8ba083b0ab6108084fd9b41b0296c5e1be2df83db198f3c4dde35498f41192fe77bd17eab871f46c1aa8f65b9bb06f5b865223ab51b12dbddab583e1d62a2596239ab77bbf82abec415614259a073663693bf38800c
59e02533c41b53c5121c6380f600da8be66a57220f0c53c8f6cf89129505602424780fa0a735df81d8f0bf44834d001b7455725882a6d43825fbdb963bd7955c7c930944c7f0fb3a21da1d6cd344fc65da8d23473784626196fa564bcf7e8c4f670b3048db5f1d9d56a0902af6d652356fb54257e8297364db55193bba0514
132f9e29b1c49715d8234589a762f9e03b80e80242935a50315a067af11bf2ccf8d0e169146a3971045d5e1770a49d248b4ab732b489f5d20a602682b4d27f0089fcf0fdf6bd99843ec09d3484f97fe2a186df5263dd3413d39a0196826c18866b24fa49ccfb53f8fd5f6cf7f3806dd77f5e4040f4be784533b8efa779db23
6b1febd294314f75bdb30067e0a815ccfb9b36197b1b588d769a66812d80c86968b3ce42cee077bbca9c6966aedd9681bb6fb90f7f90576296caa5a99ce8c05f0a431441c665873c92b5fe955444db5584360dbb36cd35021e52b532b03fbce96c41e62d8a2845bc9cac6af2a2d7d76a351d9dddcb46ee915a499266f80937
215970e5729d2e68891a11ca75bfe7544e832b4f862d32e1dd250e554f0080a91c32fa28f5a7c6910412fb904cd89a24a3e344f66c6bc01eb0779d994205fbdaf185bd4e4de27cd45f2cc311359c66ec7e149da80ab501881d12d98807a8587666759e327f7d46a7429cd13f34357d70466ac3a8610092ef6c61512154a10e
9723521b1b0d4192e539e212e0d2116082f3da608755058ba372573c7dd4b345090bbc74cc8404525c0506c661d4489b30c0fd65e3497df717a2228616316d7a9104789436d46e476372b68253af47faf17a545b6615c2c438ccf8b0eeadfabf0984ca157c848c3ba58e75f66f8eac68b4e67ab4a21f86129799e2ca878788
00d556ae9ca9939ee6db109209f5352a06950ec8c5ce0dd2907f3d7c88d3e4ea9ba10ee670ec1712c626661ff1bd1e1a676d6f3ee7a4c777ed4ac9c4ca54c100ec67225832b73a023bc75b6c062fb785c9b57320e87ff1f88cab9a62d0d2f20783165adaa0ae8b958e1ec2b7e5dfd422516921070d94df53d18413f1901a14
0864b9375d90c5561b4608a715eeb12f1139474b66ad358c041219a5a52b49867cf8e76ed3038d8c186cdc3642a636576eccd3b14e420b11e18683b423e3221233e56c63fde2b196dbd4354972f5e2d9c03a5cdcd6117491784e9f2de8fcc67029393a254b34b4a6272afaffcab0c54ec6fb672220dcda977a111fa4e784f4
8c19c0281173201b67746b75238cf9a77ccedb86819322ef93bf4bca334014455ebae694d514729f289a1ce8f87a8bcfdd078d89d8c60fe355ea484ee5784add3a54c88325174cb10355b0a08becb9e69fb1491a901800ebcc079d6d9879b5fc1f2542ca9e4f1b3ec000e49f0e47bc4979f76bf711fcb5a49575e360b8ccf2
71ea529c0959c4eb04db73e5fb32f3cc47f445520348b090e0c0caf0376a97ebc8b1a5a7ba3b17da4641bbc7d8c01db7b66dd455fa18acd688d3051913f6a7d99bce333dc3b9f0e3ce317ecc7b9bf4b78652eb51204c3ea0101b1c235759c2ae0840a98d69bc536c58ec811536215ab11f87017f2af7abf65812137a946fec
4e4de80368b749e917e026abcfc497645fb85891166afd2bd2a8acd54f800018376caa18f378b4261b95cb1702d48758770e0969f64e3d4525c31fa7492776e52a5b50aea1aed8cea9f2fd195419e0769f62f59b6dd0530799ccdcac1337829ea9550602cb084c1d7a5c92e01f4f2a97fb1b38fd5a2094121be21b0323c627
c048d8960091e27f73ba1d8cbce03b086b52de07f90cd72ce1bb94a5f24d90186a4da6f7f6453a6f33e72dcbfdcbd8c2d87172dfe4c4415728ca30fabb4a94fc98e19129d2a0ff3c5104cf153296a4442955696e440e92ec6c327f5d7ac12a39eb52b445497dfc61d1706e6320de465789edceb5ae5437d8292ed652650880
2bfa9b1e0d5114fca1129ecf4a2bd5b30aecdac22e9e2d55ad7f728fad208f6d6cf4778db6e96f6c2ebda67c17e7143dac4de8f49846ea5ee5c207a8ae48ce1b04ff5c7472da9bf68230c2d6e10b6e39bb7ba957ac6b344a1e19572533c8278cf87b46c9a7fdc8ce371dea3075d0ae3055fb78e86c32e54e6861dd83c8f0d5
eed420d5b3f650f463d7f4be4331ac19529b36e1de5550e95023589301723e46631d9400ddfa74b4330d0b952b97467cebae7a4e27448bc11cb7193d2a886eefd848866e6b92b331a52d6677c74ea715bbd5a5d508a95268285a74c2a2c4afcb4a0272982c53ce51676cf12d811da8438637c857edf41311b8632534e9a0d6
a37b69f09b413dc67e5488b3b68129e0d67ba327b172a9b7b9e514fd3774b3b6c9200b2094852e2c5cb989e3f7c1b13c2679ae03b7d3d60934ed03f7ca672aeb758b8f086afada0310c21dffea22d86503c5860a6f97a5205957ee9a8584e49b1a1d76bee20432f41b83b8a3990574dc7d3d1d341cad221e177f341396805b
bacdf59ae84aadc78bec9e8e48f383554aa497b03aab31d2fd944486e78c3bd4200edc363cd6160055cdf71916ec3b9d5d65dfd9c2d3b68e61b9003d1c4b38e283f7f848968a9e430b9b8eeaa047ff1e7cfb5da46838561b495f4fc1613cbc7f699ea21ec717b7a3537611eabf513289f799acde558df45ebc83e4467a6a17
4947bc5c703109dc4e2dafd2dc91b3aad982e40b8e67de2547beb68cb7437a69d2c881be5b99803e0e9dd34d78b48bf46905b570cb7baf2336cf8b387bb9f339063ac91da6233862ac8ebe443ea9ccff494e05759c8a64af7e425612a5d51932eefad6c2ca625e4f7f63856af89ed9bda45974333704aa98f69f7e07404b94
15c30f326e3ca5d70e9e63535ce6f860752890f95c2e7ecdf933dfa5b90af49d42735762ceaf06ebf842482362b62bccfa6fd92e4e306879bfa7497709df789b7014e3da9bcef39fcbbd8018479fb2c33b90cf854308333c7aaf18d1ac00cfc5abdd14e65bc3d6b939d5d7d0b3b930e7be0f1f5a15c51df68801a984812cc2
6d922ec780c96e37a5f8f8fd5886f0d533cda8245915055610c40a7cf55f6f86b895b1790a930e3064e0459f81bd039f6bc68c8be64c342421a8d8c7112d2c5ab36299ece9c843fcbf0ee4be3cdc82faddf3cf540d1f7a8a9e7f21ea0197884f3addf7b4334c728b52b2518dbb108335f51e5c09200dc77b5d61badc27c2b4
4dcc04c87f5eb3e5f2b0577a81956f6b45c01cc99e21d28e402a40c7706db6becdcc95adcbb079706a0ec12b570fe3da57043de995d488a682ff0d0f14fac57a23e11c6cd08735346e498ea3eb1b95dc17d1b4d9a7dc12d0a7cc2a79b06dea70c5a396ca45596ef454b2d737296817db509a3e649445e1853203c7777c0806
408bfd63dc80f4541bf88c68a640846e1dfbe74087b92a7463161b0ada2dd266100d1169c6eadd631e148080e2d6ce91caca1a3f019cfcb4ff5027609342c02c6ede457643473d79c97c86e5e1b9f48b950334dfdbff4d25eaf6bbe5acb91fc808002c5bdb75acf19f8af25a7f8e4cb3a9907ce32c45cda6cd2fc6286cab88
74e90458e57f943e8097c8a08d2a18a58977d5c81a3a93cec4c6587c44f728894e1cb35e6c38e20e5a52eab6f0c24cd34ceeefed6244095fded7505812d5a977985845d86cee1cce14cd4048802c79b73fda34f6f5016971623d830c30ac79e7ff1939e4471e0dd5c65da46aadfd9ac636397a6af25999fa641972a88d3659
dc10b9f6f17733350e7ef7f6c0f8b81b45c8eb030548ed2f9b69270ab43d66088e85fbdd6b4029b2a5b3638a5d807117303809921fe6a7ed516c1d15006aab9ec8411239202a42679ff8c62189cbba56d2b65e68a841918426c7e410ee121cfd6669a314a8f525dace96b39b7e04e0771dc349a0eb9d793e4511693b75d572
152d406b73eb4f159c2aa66c12661bda453f8d11615859c30ffbfef12608d4c022c738465c9daf0aef5ee2d2bd0d0108b9b60ada7857c9f73b636823d7c5f1154880793e064a59c36af77874df154d02eef9b328461fd840b8b25ff977af3f1065bf060eef710468229f089a6a17840dd41514758fedf3f730581324c7fb82
32070417fb7d561a35857f03fe256f7f9ec83d49f23e7968cb12d9c255bbc9b1524e90ba407a5936a654e042a2c10751c8fe02a63ccc9c0f7f31d45adc675b371ca4eac1aff00d6b08801c5ce77d0498f8f9f4c1ccb2385214cff780774a0373cc229cf17f28fda6d159bf3fce744b2ce3ca7fd7488522fd0722008d64f106
b3b1fbb2d81f2e19ce9b32f7159a56a25f287eff3776cc2e051d61f7462828cc21e5bfe5d366d948c8afa7e4428155d3b03e8623bd8e2d1781bd929cba795a962ad1f0b7b18624f927ed3e63b7c00cae9325c52911c5c078f0ab8da8d20a6d9521d01b8571e1aca52302db711898f3bc2f83c04a4974f2ba3b2e0aa674bbfe
ebfb39e8d9822a623278873daf3d4f31125c0d46b4f59cf70a74f880b9d123990f3883ce110a29bc48e06286a311871a0db7f7b922b31fb09b3ad672b8879865d9a97f49ffda00fd429d66a787a086fb7251c8bb68bfa80d111f84724f121c5c02a9b55a8c8b4a24014d706b7f78a4d97053e24dbdd949136406d9b169fc53
86bc7a9080990a158ba9ea520c74c24909e67ca6dcc5b8bae786e8eff339d537a3e6c43081a3cff552e1d21ab6fb9baa7c8504746d82e040a018d9472c815eb0ca2ec400e489c17b33c4d66ca3a3079b61f6e2f82a8eac53c799116531178ae7228e2b0c30f06f7dc0625974a420d0b2f906e51afc21916ddd36ac3fb20449
0c9d928c3e33260ee174f0f05f290f69fcbe0ad7bd67f4498b7f3a3d4c48f8f362a541ec018b3b97c8307751b52d5dbaa1759017cf25945171f5c284257868f2780aba1bb2dbd30c3a6eafee086eaafa74af77911d94610201ddc938c9cb32fc88f412d30428726d8f5581813bdd68733fc54c7cf034b5e1fd33a5a0f93655
b4ef50d5c4cb94cc6ee54ac5bf7a9f4ca98174956b71f83798cb771360f1a8ab938a5867130e2a9cf47252b28ece80c40f51e46f1ed2d4fb56b759995100131ac42dc259f4dec37ab78023765ad474ac1b6201f923f73840d2ebe3027f609e3d1af8b06bd71af4c04817ba5a29bdf35c6a9c070430c07057defb1ee82e1296
3eeb7ea5404c6419aa4858517597a3642713411f141ccc194aae908bc126d579850d736a9680be4474cc7dd1a3e5bd342b9646beea311e43f18db84db8563a91f27e6be606499a4babad33aba5255e4c68692d763483708cd6c5698c9edfb1fd7549024935badaaad3eea5265c1a25db354fde78c08818a59d3134f436c907
f2683d45b1dbc91dbbe3831ea349a09c871e7ece39cb326012c728dfb9afc1d3baa6407aff8d629b912a13145a59546346222e047ea10658c2e3add93faae71c96cd997a0b4741fffee1b9dcd4fc92bc6e05606d1bc3c7915fb4dcf4c6b184e384bfae3bc3627b72eb52228be12969a1a3b52ef772da7baf22e74cf177c8c6
a298772e1b44a1193e4ff7b7aa4e53543f8673360094936cd55e67a7a407f8178cd77d72239d8820e624c6cae5734b106d726742371e8905b79b0dcb97f0b3e4cb398f0e17fd80cb02c32330bfc4fefe8cc8f6417ca04c62be6282785a1518851fa73704372d3e715e72e1dcadfb2b5f3480b823c4666ef136e4b9a5b3009e
1b87f5c553b6c7746336a12dab30dd3223513396487e68c063001c9e33e5d179d5299bb7e6d6dd6046117eafabf8a03cd4394d9bf05513a3e833697cce8db0e804461a669ec2552fa79e12d3528db57b1a80177c5d6663cd009e3d02ae3b85b58bd1c0c309eec1a68752f13e6622a417ba72e38af4838b7186487c44bc4077
eb6038ca8067eaa7c8f21524db8570592eb66b32af113d0b992c2b796833c6e6dcf99b3b27b81093c8e611bbcac751b5270fc6df8613a4b8db226a71fa3bfc4036d0a417b5f37e40c5b802c5ba1aaa329c421b4fb130743f483a9cd12dd117a3c67d0d8737d7d724b9520fcc7412826c87010216e3c472b234f9bab7d214b1
c507fb9b22feb75ab6f561eed5f38234462830d6ad004f5a414a8e886dce02f8fccaae26007b662f7085c19fcc75cb60514879692f78abc987d4b0661b4c225e5fd90ee7022e0cf9be9e91ccc6c63ee75eff5b1f5123228d526427120868d1434349441d83a98690caac2ec781204ac0b56ca071ca7daa786d70aaf562946f
b58c1c195fc8cee14eff24bc909ea32869062dc99091bf59173bf7853666e64608a3098434735c16e4d9ef408ab14d7fa703d6b19b9d52611892858f1c948d8bb40f91ede0f5d5be565f3a2a1f9c6c7a496b896d34a08c78ffddda4806e5238a04440b9732068557c4c263ab5a18c2ef4a23d08e081163d2c2cca9faf1c8c3
e7cbe25580b66f927a089ee6aec7db601fc86234f9de9b8d16d13bf63d208f07506b1cb6708941027e8b5fe618f8bffbf7779ed1b3a6112d15e53c889319294134c6cdfce8021f8a94d618d66a36783c5b4a656807af1c1f27989aa66febaeab4b4a0130261e62f08d2e427b9998c73b301199ff96f2e138b786098d6c65c6
bdf071ed358ce8e44495dd1483c537dd2f17203211aa96c05be714b7417eba0cc24cf9821f0ae17737769ab69a889064bb584fd4bf71933ae68678baab47f6ddd9d7c9bb92a1a4f5400b4902d8ff388768fe5f8c66988bab53051e7b3111e690019ad7ee8f2c12e4ddd18c3d1a66d1e55d47bd470597f419c4e54d9b6109f7
10ab3b6b1f19c1a61354da824f2ff972118b72a7a670a87ab4ba7da140a7e81db4db2fe50262fa8f755508abe611d177549d00b4754ef4fe52a1f1a0df577e9bcc6bdd43c0112965fffdd39b9a4dbdd51ee61574734fd3bdd751f2770770032b65598d7376277e8cc18b1e77aeb290e21edfdfcb7362df40496c9d25905c37
8caac12a3d83792d7e1a9e2e5b0d53227cbbb321bb5f75e9ed27cbf17ab6bea547f2dd14a060b88d39a0d94c27837ec803d8154373a032db91b609104a70db7eae8a80a8d45aa8206dc5a41b82f028199647ac2ddf02037902636d8b0778eee040e1e48092b8d86babff6b7cf15bbfbb6ff30e4e2b30b536a1ce983e6cdadf
65e25d7678c036c057951bfe5821298b91a1ec3838d79e4ed2bccd7fa634db391b531bf11887a97b204348a165ec10f90698bbaec062d64a472197ace6e387d16f6347ff4049ca1f02824292abffd6288717334e5f7dce7cdf475ebf7c8bdf38fba120c625474623c566a0c26163457fcdeba1c22e9b826020e296dd0e2550
0cdfe2c245f30568f123b6cbcf5a6c6720910b0bbc116fc098a372bacedf36b486be6d8b510affbb717361af2bf84854726d4dfeec7f4c5538d5cb01af2ed5a974ad0f4ef282717ebaa8e46a302afcb2c51df4c2538880aafb9bec5bfcf6b89db15030e5e75f4a1400632f19ab64ef19ddb9ff6f6bbc3e67ccc7a4bebe3f8b
4dfcc1561372184590e4712e1cf98ed241e93698497837523b4c148daf843e87e15f523b18deed6c864d77196e362d8c3b171f0f219154fdbaef737c8cc83db16e60f5f813f9e575b2f62ea334da292fd3716d1b650634dd067b4edd1518724438f4f532a154d3848ec3f18db050778a50ff4fe955800a9fc2400dd206445c
556106e9540a7d846999da314c67e70229f92f3f55056c13fd2a02d4834580d8533d7a75578b1c4aac994d07825f91a9476596a9d9e3ea403faff49aea3e1e5d08cd5f889ee784ea478a7d463655a3bf597605b8720f6716259b4a76fd65cb3cda014ecbb0f881f87066bbbef553423d5594572232da710f301a9a5b980a9a
ceb365f196fa5f3f904812f45d07a35df3f6f4b08795e00bb5fabfce94d3230a45c568e9e0769b77504b8f203daccdeb3c57ea0cfb779e0afff2a4906eb2763b1f6c1a7f01ff52aab2a08a600b0fa168929549b4b41174facaa561a5b2f46cb4221510ee23446474ef79e9bf4cc2987532c9856641d5ed8580d01862701899
d80f264d0fef3aa6360918f783b5f680e4d643cf13ee9e9675b7ed8f9149a661d2eeeaacffaab11118c4e7562da7e461bcadbe696787ec2ce1464c21819f0c8a5d0b24ad35af6107cfc7d55de83bdf9e2c381272760d7260b6680b315046d9a29748760f9292ac13a1ce98a6aab9613caddff6bf134d1905a26478d0278a68
68af27bb46ddc10b4a5d293bbadd2e573446a9359b41ed7c685c491780cf892354aaece79f93d1800b795295a87acc075cac6a7c8279cc853349e367ebb2f577938bfd06906fe363ebefc85256cce63569e0af3bd8d5c7c98ab6cb09dc34c0163c504b19eb8c1160db0b4cdc5f7be2a537d3a1cb67916627227de54335111f
47ffc8f7996a4122ed73d12564ae4dc6f06d49145e802c76303e98342a6e77c7fbcfe772d2145b901840be231be3fb3731080b7980826b865ac57d51e3894148132eab9f0d7018b46811fa68f6cdb11d8b9336a51cc625a9c4bcfa7db67436aff60b0c4d98454a95de6b36142bd0531200bb9f88e1a8c67eb94940839fbfaf
26ef2853c50423b3a5b100abf1894eea76fb8f4bb0763441d4cec90db97f52c298115dcf616bd7f1fb4da926653b87539687592ecc91e07a440d589a587eca15b6f7d132f81783c4a9b975b5bfc9d9116d4f97790c7dec5fe9c94b0d96755a90a1f8a893a741fa962b104de99fbd22f684c0daa58cc63f06ca36180b6b6425
2efe590717b617cfcca46bdd5d9e6d8af93ac969e8fad118496f41c0f85a0b749473322b42396aa6d87a9c5c8032272c5d85cc5af6ba82801f7608433695acecfce2befd42454d10261de1d59b6304e43d3a6779618b3a6139f74980cf3b95f82e4cdd5082084e15e8d5c4b9a50ed1c6b33d256dd1b4a94bf0fab2991d7eee
8fbed76468d14e70acf32d9ec0eb19930ca8e56f80e71fa8752f29c53d89490c257f4d79b7f6f1eaec6852cbb9b094b15148db4117288080001230b59ee3a630ed6fcb286de8473ffdfa260f8ddf1d83df79b8f8403ef2b8598489d341dcb16c2a1ce58c3b9b8ae459546a75c7312f6999c2f6682dc6ce51855b6699c4b074
f043e419c9c603fbb4524e6b61190ae5072db39727e52a13428e19856701ff8611122b96f06b926f03db062d183be907f1f45fefc67977072a6052cfb9cacc689c18a7827e15ee19e3b4d9e5bad9888ffbba740333a1fbdb4418babba972948345189ea85a12f836f8fba2a550c04875803a83f65556cb18f96af89e6795dd
abfb32c55814f28659767bf8fbed097d6a38c8826aa06a3124f782500c491fa346db1fad670701d29db9889de01daa838eadd08c63ad42dd8468f561041f39de98799d9f38cf56936077bd3dcd4c187bc7dcebfd512081f4a0bcec06be68e10262285960985fdf105ea36d04d731693dcea3632fdc9d4e3a8be1efa1b5a48c
3b439a66ca90a30f2f233bc72b11a094934d17d0cb8f642dd2b6576a06442254d726e491fb29a15c563167c554c26cf20eaddbd3bd81bc5093c474aa2368adbc4372ee905eb2feef806bdcb24589899e9fc2ab616ea956c7a77249e9d2026a014fa06b280ae0b1c450ffaa1e63fb3cfad83827ec09cc7d72f2826d37b2d958
a12ad2acfb6fd8806981b6db354d6dc9c5239a65db5dc9d1a8927c9213fd14e0a7cbdeaf6586cfaaaf041c1c746dfa37d3fabbbfd9ca697f6222fb4c28560f23cb9d060278d9e8630e2674a72fc6f560902c89957251804cd3aa38a0a7c9197c440359e57c4dec96f3014e26132997e0e181d14cccc97babeb9e55cbd896e9
d1d1610c862834e8cfbc6259d3ed82010567993397a02430e075fcf19f4ce353014bcbe7d1fc52c025ac9b8bd2afc276d9bd3429cab3372b8d8f6cbed2574feda5c4e0adbc5cac3b5e136dde67b372decf3c9db89b1c5c370d463b451aacdd83ef42d7ce7e4e5e54a111ea23f15cd368e0b9671781c716aec18ef376343615
2b6f37a4469db4ec474deac330f8541812ef856f0026eb1d99bf68ce0daaf2103e164de78c84ba71d35969752287d26fb2ca3b1f622f259ec36f2ee7b165268c0375955c3f661d8d34e1ee43b7891ed77a3d4c77c99a455875d9bea3b6cdb8a9c7c9767a10686b912c25c3f77721eb805ca5a55da81f6fb46d16ef546098d9
77c19139ee2c8f96d77d90820ac65d65f51b1dcf390c61d5e2a2ecce550a1e2f8a5ec6a09c5954a5b97de92805503ec40065382a6bd524b493c1550820fe52c209c9d58cc0ec6b29950fd07d355b2d8ffacf47403e1a33cce47c0526d3eb939a983b3f213227f3d489f7bb229a71fbbd74147b1e8383beb4eea046fd6d5e9a
5c9182e9911c28fda64a87e3f5cc4e9f9c5df357d7e0ec0a8f61afc83bca966a91cfd9296796df8f20b177f886f0bad728469eb00ef03c250ac21ac5482b01bea27873504e313b286a86601772f920ed896abeb62b46eb068d3383134d0771a71c51fede299f543c8915017b6d197449acf671ca06a71385199940fbc77324
c4bd1e7f80012fda7a0efc0c29e88ac068f116a4d28e0a1c5a8a1b756f37599d75df116d2b1c8ea799a4a8b9b416de26e258f1219b915996cc64add879448ee00378c8023bd36e9336f100919433f11182d9779201569e21df4d0a76066afa124121e8faa5eb1a771a31b49561a9024318a9b6223361fb7ac98eb24e23f613
c4ae93c047bd7a896fd8c28f3587fafd9d99f0f2a49032d9b30842cbca99933badfe6319311ae3b029c108d390fcffc47a7c2a3914903254667331fcd1d74cdb8c360d51c02fb0c0beff1afba7cc09f359e27fe986e19aadfabdf1398ec7a26a133e77f4ef7cc9de1f31cf4cfe7f8b605b69435d725e25529e4c904a65003e
73d9c55e849a68b06738aeafdeec54cc1c54f305b2649f84e66b628f7c3f370b333f5542fd5cd5b5dcf5dcbd08272c6959bb2b4f7fe18ab2a121db728f6f40a444111ef8b910562da2b3f7449c57123f6b5fc84c90e13d5be73571cf0e83c5f31b59b52e617c67c54dcf9097f224f82220b79719a45500dff33f3136011a71
c26060b325483cb2af5c1dc5ee3baadef3552443556de0738e0aaaa54e13dd0ad245500834812700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndFont
setpacking
%AI3_EndRider
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
6 Bn
%AI5_BeginGradient: (\203G\203\201\203\211\203\213\203h\203A\203C)
(\203G\203\201\203\211\203\213\203h\203A\203C) 1 3 Bd
[
<
E4E4E4E4E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8
E8E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEF
EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
>
<
7675737271706E6D6C6B6A68676665646361605F5E5D5C5B5A595857565554535251504F4E4D4C4B
4A4948474646454443424141403F3E3D3C3C3B3A39393837363635343433323131302F2F2E2E2D2C
2C2B2A2A292928282726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1B1A1A19191818
181717171616151515141414131313121212111111101010100F0F0F0E0E0E0E0D0D0D0D0C0C0C0C
0B0B0B0B0B0A0A0A0A0A090909090908080808080807070707070706060606060606050505050505
05050404040404040404040403030303030303030303030302020202020202020202020202020202
01010101010101010101010101010101010101010101010101010101010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F9F9
F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
9896959391908E8D8B8A8886858382807F7E7C7B79787675747271706E6D6C6A6968676564636261
5F5E5D5C5B5A5957565554535251504F4E4D4C4B4A49484746454443424241403F3E3D3C3C3B3A39
3837373635343433323131302F2F2E2D2D2C2B2B2A2929282727262625242423232222212120201F
1F1E1E1D1D1C1C1B1B1A1A1919181818171716161615151414141313131212121111111010100F0F
0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A0A090909090908080808080707070707070606
06060606050505050505050504040404040404040403030303030303030303030202020202020202
02020202020202020101010101010101010101010101010101010101010101010101010000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEAEAEAEAE9E9E9E8E8E8E7E7E6E6
E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDCDCDBDBDBDADAD9D9D8D8D7D7D6D6D5D5
D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C8C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0BF
BFBEBEBDBCBCBBBBBAB9B9B8B8B7B6B6B5B5B4B3B3B2B1B1B0B0AFAEAEADACACABAAAAA9A8A8A7A6
A6A5A4A4A3A2A2A1A0A09F9E9E9D9C9C9B9A9A99989797969595949393929190908F8E8E8D8C8B8B
8A89888887868685848383828180807F7E7D7D7C7B7A7A797877767675747373727170706F6E6D6C
6C6B6A696868676665646463626160605F5E5D5C5C5B5A5958575756555453535251504F4E4E4D4C
4B4A4948484746454443434241403F3E3D3C3C3B3A39383736363534333231302F2F2E2D2C2B2A29
282727262524232221201F1E1E1D1C1B1A19181716151414131211100F0E0D0C0B0A090807070605
0403020100
>
0
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F5F5F4
F4F4F3F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2
E2E1E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D8D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0CFCECECDCDCCCB
CBCAC9C9C8C8C7C6C6C5C4C4C3C2C2C1C0C0BFBEBEBDBCBCBBBABAB9B8B8B7B6B6B5B4B4B3B2B2B1
B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A999998979696959493
939291908F8F8E8D8C8C8B8A898888878685848483828180807F7E7D7C7B7B7A7978777676757473
727171706F6E6D6C6C6B6A6968676666656463626160605F5E5D5C5B5A5959585756555453525151
504F4E4D4C4B4A49484847464544434241403F3E3E3D3C3B3A39383736353433323130302F2E2D2C
2B2A292827262524232221201F1E1D1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605
0403020100
>
0
1 %_Br
[
0.8941 0.4627 0.9608 0.5961 1 16.2162 28.6517 %_Bs
0.9412 0 1 0 1 61.5385 64.6067 %_Bs
0 0 0 0 1 50 78.6517 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\203T\203\223\203Z\203b\203g)
(\203T\203\223\203Z\203b\203g) 0 5 Bd
[
<
EEEDEDECECEBEBEAE9E9E8E8E7E6E6E5E5E4E4E3E2E2E1E1E0DFDFDEDEDDDDDCDBDBDADAD9D9D8D7
D7D6D6D5D4D4D3D3D2D2D1
>
<
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E
0D0C0B0A09080706050403
>
1
<
807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160605F5E5D5C5B5A
595857565554535251504F
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
>
<
050505060606060607070707080808080809090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D
0D0E0E0E0E0E0F0F0F0F0F1010101010111111111212121212131313131314141414141515151515
161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E
1E1E1E1F1F1F1F1F2020202021212121212222222222232323232324242424252525252526262626
2627272727272828282828292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2F
2F2F2F2F303030303031313131313232323232333333333434343434353535
>
<
E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECEDEDED
EDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8
F8F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
0001010202030304040506060707080809090A0B0B0C0C0D0D0E0E0F101011111212131314151516
161717181819191A1B1B1C1C1D1D1E1E1F2020212122222323242525262627272828292A2A2B2B2C
2C2D2D2E2F2F3030313132323334343535363637373839393A3A3B3B3C3C3D3E3E3F3F4040414142
434344444545464647484849494A4A4B4B4C4D4D4E4E4F4F50505151525353545455555656575858
59595A5A5B5B5C5D5D5E5E5F5F6060616262636364646565666767686869696A6A6B6C6C6D6D6E6E
6F6F7071717272737374747576767777787879797A7B7B7C7C7D7D7E7E7F7F
>
1 %_Br
<
33333232323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A29292929
282828282727272726262625252525242424242323232322222221212121202020201F1F1F1F1E1E
1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616161515151414141413
13131312121212111111101010100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0B0B0B0B0A0A0A0A090909
090808
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483828180
7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130
2F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908
070605
>
<
F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECEC
ECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9
>
<
1111111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D
0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0909090909090909
09090808080808080808080707070707070707070706060606060606060605050505050505050505
04040404040404040403030303030303030303020202020202020202010101010101010101010000
000000
>
1 %_Br
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E1E0DFDEDDDDDCDBDAD9D9D8D7
D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C8C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8
B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A
9A999897979695949493929291908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7E
7D7C7B7B7A7979787777767574747372727170706F6E6E6D6C6C6B6A6A6968686766666564646362
626160605F5E5E5D5C5C5B5A5A595858575756555554535352525150504F4E4E4D4D4C4B4B4A4A49
484847474646454444434342424140403F3F3E3E3D3D3C3C3B3B3A39393938383737363635353434
343333
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E2E1E1E1E0E0E0E0DF
DFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5D5
D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCBCBCBCBCA
CACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1
C0C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBDBCBCBCBCBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7
B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAF
AEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7
A7A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243434445464748494A4B4C4D
4E4F50515253545556565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283848485868788898A8B8C8C8D8E8F9091929394949596
9798999A9A9B9C9D9E9FA0A1A1A2A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B2B3B4B5B6B6B7B8
B9BABBBBBCBDBEBFBFC0C1C2C3C3C4C5C6C7C7C8C9CACBCBCCCDCECECFD0D1D2D2D3D4D5D5D6D7D8
D8D9DADADBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2
F2F3F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020202030303
03030303030303030303030404040404040404040404040404040505050505050505050505050505
05060606060606060606060606060606070707070707070707070707070707070808080808080808
08080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0F0F0F0F1010101010101010101010101010101010101010101111111111111111111111
111111
>
1 %_Br
[
0.8196 0.01 1 0.31 1 50 100 %_Bs
0.9333 0.2078 1 0.5 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.2 0.6549 0.9529 0.0667 1 50 49.4382 %_Bs
0.9647 0.9176 0 0 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\203X\203e\203B\201[\203\213\203o\201[ II)
(\203X\203e\203B\201[\203\213\203o\201[ II) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A
>
0 %_Br
<
1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1
E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0.1 0 50 100 %_Bs
1 0 50 39.8876 %_Bs
0.1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\203u\203\211\203b\203N, \211~\214`\203z\203\217\203C\203g)
(\203u\203\211\203b\203N, \211~\214`\203z\203\217\203C\203g) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_Bs
0 0 0 1 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\203z\203\217\203C\203g, \203u\203\211\203b\203N)
(\203z\203\217\203C\203g, \203u\203\211\203b\203N) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_Bs
0 0 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\203\214\203C\203\223\203{\201[)
(\203\214\203C\203\223\203{\201[) 0 6 Bd
[
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
0
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
0
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
0
1 %_Br
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
[
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
0.9765 0.9882 0.0196 0 1 50 80 %_Bs
0.9098 0.0784 0.0353 0 1 50 60 %_Bs
0.9255 0.0745 0.9373 0 1 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (\203A\203W\203\205\201[\203\213\203\212\203\223\203O)
(\203A\203W\203\205\201[\203\213\203\212\203\223\203O) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d0 XR
40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (\203J\203\200\203t\203\211\201[\203W\203\205)
(\203J\203\200\203t\203\211\201[\203W\203\205) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.5961 0.1412 0.949 0.0275 k
 0.5961 0.1412 0.949 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.498 0.349 0.9725 0.2 k
 0.498 0.349 0.9725 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k
 0.1882 0.1098 0.9255 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k
 0.9255 0.2157 0.9647 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (\203O\203\212\201[\203\223\203e\201[\203u\203\213\203N\203\215\203X)
(\203O\203\212\201[\203\223\203e\201[\203u\203\213\203N\203\215\203X) 0 0 24 24 [
%AI3_Tile
(0 O 0 R 0.8 0.21 1 0 k
 0.8 0.21 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6 18 m
0 18 L
0 24 L
6 24 L
6 18 L
f18 18 m
12 18 L
12 24 L
18 24 L
18 18 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3798 0.0997 0.4747 0 k
 0.3798 0.0997 0.4747 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12 18 m
6 18 L
6 24 L
12 24 L
12 18 L
f24 18 m
18 18 L
18 24 L
24 24 L
24 18 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12 12 m
6 12 L
6 18 L
12 18 L
12 12 L
f24 12 m
18 12 L
18 18 L
24 18 L
24 12 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3798 0.0997 0.4747 0 k
 0.3798 0.0997 0.4747 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6 12 m
0 12 L
0 18 L
6 18 L
6 12 L
f18 12 m
12 12 L
12 18 L
18 18 L
18 12 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8 0.21 1 0 k
 0.8 0.21 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6 6 m
0 6 L
0 12 L
6 12 L
6 6 L
f18 6 m
12 6 L
12 12 L
18 12 L
18 6 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3798 0.0997 0.4747 0 k
 0.3798 0.0997 0.4747 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12 6 m
6 6 L
6 12 L
12 12 L
12 6 L
f24 6 m
18 6 L
18 12 L
24 12 L
24 6 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12 0 m
6 0 L
6 6 L
12 6 L
12 0 L
f24 0 m
18 0 L
18 6 L
24 6 L
24 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3798 0.0997 0.4747 0 k
 0.3798 0.0997 0.4747 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6 0 m
0 0 L
0 6 L
6 6 L
6 0 L
f18 0 m
12 0 L
12 6 L
18 6 L
18 0 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (\203s\203G\203\215)
(\203s\203G\203\215) 5.25 11 41.25 47 [
%AI3_Tile
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
17.5 18.25 m
17.5 15.2119 15.0376 12.75 12 12.75 c
8.9624 12.75 6.5 15.2119 6.5 18.25 c
6.5 21.2881 8.9624 23.75 12 23.75 c
15.0376 23.75 17.5 21.2881 17.5 18.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.9529 0 0 k
 0.0078 0.9529 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
22.25 34.125 m
22.25 31.2939 19.9556 29 17.125 29 c
14.2944 29 12 31.2939 12 34.125 c
12 36.9561 14.2944 39.25 17.125 39.25 c
19.9556 39.25 22.25 36.9561 22.25 34.125 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
30 31.625 m
30 29.4854 28.2646 27.75 26.125 27.75 c
23.9849 27.75 22.25 29.4854 22.25 31.625 c
22.25 33.7646 23.9849 35.5 26.125 35.5 c
28.2646 35.5 30 33.7646 30 31.625 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
23.25 24.5 m
23.25 22.4287 21.5713 20.75 19.5 20.75 c
17.4287 20.75 15.75 22.4287 15.75 24.5 c
15.75 26.5713 17.4287 28.25 19.5 28.25 c
21.5713 28.25 23.25 26.5713 23.25 24.5 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
36 22.25 m
36 19.0742 33.4258 16.5 30.25 16.5 c
27.0742 16.5 24.5 19.0742 24.5 22.25 c
24.5 25.4258 27.0742 28 30.25 28 c
33.4258 28 36 25.4258 36 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1216 0.8 0.0157 k
 0.1882 0.1216 0.8 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
24.25 16.5 m
24.25 14.8438 22.9067 13.5 21.25 13.5 c
19.5933 13.5 18.25 14.8438 18.25 16.5 c
18.25 18.1563 19.5933 19.5 21.25 19.5 c
22.9067 19.5 24.25 18.1563 24.25 16.5 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
37.25 43.875 m
37.25 39.5264 33.7236 36 29.375 36 c
25.0264 36 21.5 39.5264 21.5 43.875 c
21.5 48.2236 25.0264 51.75 29.375 51.75 c
33.7236 51.75 37.25 48.2236 37.25 43.875 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.1961 0.9373 0 k
 0.0078 0.1961 0.9373 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
38.75 26.625 m
38.75 25.7275 38.0225 25 37.125 25 c
36.2275 25 35.5 25.7275 35.5 26.625 c
35.5 27.5225 36.2275 28.25 37.125 28.25 c
38.0225 28.25 38.75 27.5225 38.75 26.625 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0196 0.5961 0.9137 0 k
 0.0196 0.5961 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.875 42 m
19.875 41.1025 19.1475 40.375 18.25 40.375 c
17.3525 40.375 16.625 41.1025 16.625 42 c
16.625 42.8975 17.3525 43.625 18.25 43.625 c
19.1475 43.625 19.875 42.8975 19.875 42 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12.75 28.125 m
12.75 26.8135 11.6865 25.75 10.375 25.75 c
9.0635 25.75 8 26.8135 8 28.125 c
8 29.4365 9.0635 30.5 10.375 30.5 c
11.6865 30.5 12.75 29.4365 12.75 28.125 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
43.25 33 m
43.25 30.998 41.627 29.375 39.625 29.375 c
37.623 29.375 36 30.998 36 33 c
36 35.002 37.623 36.625 39.625 36.625 c
41.627 36.625 43.25 35.002 43.25 33 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.25 43.75 m
13.25 40.9883 11.0117 38.75 8.25 38.75 c
5.4883 38.75 3.25 40.9883 3.25 43.75 c
3.25 46.5117 5.4883 48.75 8.25 48.75 c
11.0117 48.75 13.25 46.5117 13.25 43.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6.5 22.25 m
6.5 20.7314 5.2686 19.5 3.75 19.5 c
2.2314 19.5 1 20.7314 1 22.25 c
1 23.7686 2.2314 25 3.75 25 c
5.2686 25 6.5 23.7686 6.5 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.0118 0.6 0 k
 0.0235 0.0118 0.6 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.4883 32.75 m
34.4883 31.9277 33.8223 31.2617 33 31.2617 c
32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c
31.5117 33.5723 32.1777 34.2383 33 34.2383 c
33.8223 34.2383 34.4883 33.5723 34.4883 32.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
49.25 43.75 m
49.25 40.9883 47.0117 38.75 44.25 38.75 c
41.4883 38.75 39.25 40.9883 39.25 43.75 c
39.25 46.5117 41.4883 48.75 44.25 48.75 c
47.0117 48.75 49.25 46.5117 49.25 43.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
42.5 22.25 m
42.5 20.7314 41.2686 19.5 39.75 19.5 c
38.2314 19.5 37 20.7314 37 22.25 c
37 23.7686 38.2314 25 39.75 25 c
41.2686 25 42.5 23.7686 42.5 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
49.25 7.752 m
49.25 4.9902 47.0117 2.752 44.25 2.752 c
41.4883 2.752 39.25 4.9902 39.25 7.752 c
39.25 10.5137 41.4883 12.752 44.25 12.752 c
47.0117 12.752 49.25 10.5137 49.25 7.752 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
37.25 7.875 m
37.25 3.5264 33.7236 0 29.375 0 c
25.0264 0 21.5 3.5264 21.5 7.875 c
21.5 12.2236 25.0264 15.75 29.375 15.75 c
33.7236 15.75 37.25 12.2236 37.25 7.875 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.25 7.75 m
13.25 4.9883 11.0117 2.75 8.25 2.75 c
5.4883 2.75 3.25 4.9883 3.25 7.75 c
3.25 10.5117 5.4883 12.75 8.25 12.75 c
11.0117 12.75 13.25 10.5117 13.25 7.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
7.25 33 m
7.25 30.998 5.627 29.375 3.625 29.375 c
1.623 29.375 0 30.998 0 33 c
0 35.002 1.623 36.625 3.625 36.625 c
5.627 36.625 7.25 35.002 7.25 33 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.4078 0 0 k
 0.0235 0.4078 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
39.6533 16.0381 m
39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c
37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c
36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c
38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 c
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (\203s\203\211\203~\203b\203h)
(\203s\203\211\203~\203b\203h) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (\203\214\203b\203h\203X\203g\203\211\203C\203v)
(\203\214\203b\203h\203X\203g\203\211\203C\203v) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 0 0.9608 0.9137 0 k
 0 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d0 XR
37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc
1 1 1 1 k
([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc
0 0 0 0 k
(\203z\203\217\203C\203g) Pc
0 0 0 1 k
(\203u\203\211\203b\203N) Pc
0 0 0 0.8 k
(80% \203u\203\211\203b\203N) Pc
0 0 0 0.6 k
(60% \203u\203\211\203b\203N) Pc
0 0 0 0.4 k
(40% \203u\203\211\203b\203N) Pc
0 0 0 0.2 k
(20% \203u\203\211\203b\203N) Pc
0 1 1 0 k
(\203\214\203b\203h M=100 Y=100) Pc
0 0.75 0.75 0 k
(75% \203\214\203b\203h M=75 Y=75) Pc
0 0.5 0.5 0 k
(50% \203\214\203b\203h M=50 Y=50) Pc
0 0.25 0.25 0 k
(25% \203\214\203b\203h M=25 Y=25) Pc
0.8 0 1 0 k
(\203O\203\212\201[\203\223 C=80 Y=100) Pc
0.6 0 0.75 0 k
(75% \203O\203\212\201[\203\223 C=60 Y=75) Pc
0.4 0 0.5 0 k
(50% \203O\203\212\201[\203\223 C=40 Y=50) Pc
0.2 0 0.25 0 k
(25% \203O\203\212\201[\203\223 C=20 Y=25) Pc
1 0.5 0 0 k
(\203u\203\213\201[ C=100 M=50) Pc
0.75 0.375 0 0 k
(75% \203u\203\213\201[ C=75 M=37.5) Pc
0.5 0.25 0 0 k
(50% \203u\203\213\201[ C=50 M=25) Pc
0.25 0.125 0 0 k
(25% \203u\203\213\201[ C=25 M=12.5) Pc
0 0.5 1 0 k
(\203I\203\214\203\223\203W M=50 Y=100) Pc
0 0.375 0.75 0 k
(75% \203I\203\214\203\223\203W M=37.5 Y=75) Pc
0 0.25 0.5 0 k
(50% \203I\203\214\203\223\203W M=25 Y=50) Pc
0 0.125 0.25 0 k
(25% \203I\203\214\203\223\203W M=12.5 Y=25) Pc
0.5 0.9 0 0 k
(\203o\203C\203I\203\214\203b\203g C=50 M=90) Pc
0.375 0.675 0 0 k
(75% \203o\203C\203I\203\214\203b\203g C=37.5 M=67) Pc
0.25 0.45 0 0 k
(50% \203o\203C\203I\203\214\203b\203g C=25 M=45 ) Pc
0.125 0.225 0 0 k
(25% \203o\203C\203I\203\214\203b\203g C=12.5 M=22.) Pc
0.8 0 0 0 k
(\203A\203W\203\205\201[\203\213 C=80) Pc
0.6 0 0 0 k
(75% \203A\203W\203\205\201[\203\213 C=60) Pc
0.4 0 0 0 k
(50% \203A\203W\203\205\201[\203\213 C=40) Pc
0.2 0 0 0 k
(25% \203A\203W\203\205\201[\203\213 C=20) Pc
0 0 1 0 k
(\203C\203G\203\215\201[) Pc
0 0 0.75 0 k
(75% \203C\203G\203\215\201[) Pc
0 0 0.5 0 k
(50% \203C\203G\203\215\201[) Pc
0 0 0.25 0 k
(25% \203C\203G\203\215\201[) Pc
Bb
2 (\203z\203\217\203C\203g, \203u\203\211\203b\203N) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\203z\203\217\203C\203g, \203u\203\211\203b\203N) Pc
Bb
0 0 0 0 Bh
2 (\203u\203\211\203b\203N, \211~\214`\203z\203\217\203C\203g) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\203u\203\211\203b\203N, \211~\214`\203z\203\217\203C\203g) Pc
Bb
2 (\203X\203e\203B\201[\203\213\203o\201[ II) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\203X\203e\203B\201[\203\213\203o\201[ II) Pc
Bb
2 (\203\214\203C\203\223\203{\201[) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\203\214\203C\203\223\203{\201[) Pc
Bb
0 0 0 0 Bh
2 (\203G\203\201\203\211\203\213\203h\203A\203C) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\203G\203\201\203\211\203\213\203h\203A\203C) Pc
Bb
2 (\203T\203\223\203Z\203b\203g) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\203T\203\223\203Z\203b\203g) Pc
(\203O\203\212\201[\203\223\203e\201[\203u\203\213\203N\203\215\203X) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\203O\203\212\201[\203\223\203e\201[\203u\203\213\203N\203\215\203X) Pc
(\203s\203\211\203~\203b\203h) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\203s\203\211\203~\203b\203h) Pc
(\203A\203W\203\205\201[\203\213\203\212\203\223\203O) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\203A\203W\203\205\201[\203\213\203\212\203\223\203O) Pc
(\203\214\203b\203h\203X\203g\203\211\203C\203v) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\203\214\203b\203h\203X\203g\203\211\203C\203v) Pc
(\203s\203G\203\215) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\203s\203G\203\215) Pc
(\203J\203\200\203t\203\211\201[\203W\203\205) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\203J\203\200\203t\203\211\201[\203W\203\205) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(\203\214\203C\203\204\201[ 1) Ln
0 A
1 Ap
0 O
0 0 0 0 k
0 R
0 0 0 1 K
0 J 0 j 1 w 4 M []0 d0 XR
281.1694 423.2446 m
99.0942 423.2446 L
99.0942 605.3203 L
281.1694 605.3203 L
281.1694 423.2446 L
b0 To
0.7615 -0.6482 0.6482 0.7615 103.8677 576.5469 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
%_ 0 50 XQ
/_Times-Roman 36 32.3278 -7.8475 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
1 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(No) Tx 1 25 Tk
(w Printing...) Tx 1 0 Tk
(\r) TX 
TO
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
